{"version":3,"sources":["assets/images/logo.png","api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","utils/dateUtils.js","components/header/index.jsx","pages/home/index.jsx","assets/images/Spring2021.jpg","assets/images/RNGcurtain.png","assets/images/photo2021.jpg","pages/home/LPLSpring.jsx","assets/images/2018Summer1.jpg","assets/images/2018Summer2.jpg","assets/images/2018Summer3.jpg","pages/home/LPLSummer.jsx","assets/images/MSI1.jpg","assets/images/MSI2.jpg","assets/images/MSI3.jpg","pages/home/MSI.jsx","assets/images/World1.jpg","assets/images/World2.jpg","assets/images/World3.jpg","pages/home/World.jsx","pages/home/home.jsx","pages/calendar/event-form.jsx","pages/calendar/calendar.jsx","utils/constants.js","pages/member/index.jsx","pages/member/details.jsx","pages/member/member.jsx","pages/memberManagement/index.jsx","pages/memberManagement/picturesWall.jsx","pages/memberManagement/rich-text-editor.jsx","pages/memberManagement/operations.jsx","utils/urlUtils.js","pages/memberManagement/details.jsx","pages/memberManagement/memberManagement.jsx","pages/roleManagement/add-form.jsx","pages/roleManagement/auth-form.jsx","pages/roleManagement/roleManagement.jsx","pages/userManagement/user-form.jsx","pages/userManagement/userManagement.jsx","pages/admin/admin.jsx","App.js","index.js"],"names":["ajax","url","data","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","username","password","notes","reqLogin","BASE","reqAddOrUpdateUser","user","_id","reqMembers","pageNum","pageSize","reqSearchMembers","searchName","searchType","reqDeleteImg","name","reqAddOrUpdateMember","member","reqDeleteMember","reqAddRole","roleName","reqSetRolePermissions","role","reqDeleteRole","reqUsers","reqDeleteUser","userId","reqEvents","reqAddEvent","events","USER_KEY","store","set","remove","Login","history","useHistory","Form","useForm","form","memoryUtils","to","className","src","logo","alt","onFinish","values","validateFields","a","result","status","success","storageUtils","replace","msg","errorInfo","console","log","Item","rules","required","min","max","pattern","prefix","UserOutlined","placeholder","validator","_","value","length","test","LockOutlined","htmlType","menuList","title","key","icon","HomeOutlined","route","isPublic","ScheduleOutlined","TeamOutlined","BarsOutlined","children","SubMenu","Menu","LeftNav","hasAuth","item","menus","indexOf","find","child","getMenuNodes","path","props","location","pathname","reduce","pre","cItem","openKey","push","this","menuNodes","defaultOpenKeys","selectedKeys","mode","theme","Component","withRouter","formatDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","state","currentTime","now","getTime","intervalId","setInterval","setState","getTitle","forEach","logout","Modal","confirm","ExclamationCircleOutlined","onOk","clearInterval","onClick","LogoutOutlined","HomePage","LPLSpring","ArrowLeftOutlined","style","color","marginRight","fontSize","goBack","textAlign","marginTop","maxWidth","img1","class","flex","margin","img2","img3","LPLSummer","MSI","World","Home","exact","component","List","EventForm","formRef","React","createRef","setForm","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","ref","fields","add","errors","map","field","index","label","validateTrigger","whitespace","noStyle","width","MinusCircleOutlined","PlusOutlined","ErrorList","TeamCalendar","moment","selectedValue","isShownEventForm","allEvents","onSelect","onPanelChange","addEvent","current","resetFields","eventsToAdd","eventList","getEvents","format","disabled","isAbleToEditCalendar","dateCellRender","listData","year","month","i","content","getListData","Math","random","toString","substr","text","visible","onCancel","BASE_IMAGE_URL","nationalityList","Meta","Card","Members","total","members","getMembers","loading","list","minValue","maxValue","slice","hoverable","cover","photo","defaultCurrent","defaultPageSize","onChange","Details","details","dangerouslySetInnerHTML","__html","Member","Option","Select","MembersList","initColumns","columns","dataIndex","align","render","JSON","stringify","onConfirm","okText","cancelText","SearchOutlined","event","target","extra","dataSource","rowKey","bordered","pagination","showQuickJumper","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","previewImage","previewTitle","fileList","getImages","handleCancel","handlePreview","preview","originFileObj","substring","lastIndexOf","handleChange","img","uid","uploadButton","action","accept","listType","onPreview","footer","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getDetails","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","parse","responseText","link","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","Operations","options","useState","setValue","pw","useRef","editor","member_","reg","RegExp","r","window","search","match","unescape","getQuery","isUpdate","nickname","position","gender","nationality","phone","address","dob","initialValue","Group","e","expandTrigger","displayRender","MemberManagement","AddForm","TreeNode","Tree","Auth","getMenus","checkedKeys","getTreeNodes","onCheck","treeNodes","nextProps","checkable","defaultExpandAll","RoleManagement","roles","isShownAdd","isShownAuth","initColumn","getRoles","onRow","addRole","setRolePermissons","auth","auth_time","auth_name","role_id","info","rowSelection","selectedRowKeys","UserForm","PureComponent","UserManagement","users","isShown","roleNames","deleteUser","initRoleNames","addOrUpdateUser","getFieldsValue","getUsers","destroyOnClose","Footer","Layout","Sider","Content","Admin","zIndex","minWidth","backgroundColor","Calendar","App","ReactDOM","document","getElementById"],"mappings":"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CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,gBACPmH,MAAO,iBAEX,CACInH,MAAO,YACPmH,MAAO,aAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,YACPmH,MAAO,aAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,cACPmH,MAAO,eAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,cACPmH,MAAO,eAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,iBACPmH,MAAO,oBAKnB,CACInH,MAAO,UACPmH,MAAO,UACPpG,SAAU,CACN,CACIf,MAAO,YACPmH,MAAO,aAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,iBACPmH,MAAO,kBAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,OACPmH,MAAO,QAEX,CACInH,MAAO,qBACPmH,MAAO,sBAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,cACPmH,MAAO,eAEX,CACInH,MAAO,YACPmH,MAAO,aAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,YACPmH,MAAO,aAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,OACPmH,MAAO,QAEX,CACInH,MAAO,cACPmH,MAAO,eAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,sBACPmH,MAAO,uBAEX,CACInH,MAAO,gBACPmH,MAAO,iBAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,YACPmH,MAAO,eAKnB,CACInH,MAAO,OACPmH,MAAO,OACPpG,SAAU,CACN,CACIf,MAAO,cACPmH,MAAO,eAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,YACPmH,MAAO,aAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,YACPmH,MAAO,aAEX,CACInH,MAAO,OACPmH,MAAO,QAEX,CACInH,MAAO,OACPmH,MAAO,QAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,OACPmH,MAAO,QAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,cACPmH,MAAO,eAEX,CACInH,MAAO,OACPmH,MAAO,QAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,YACPmH,MAAO,aAEX,CACInH,MAAO,cACPmH,MAAO,eAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,eACPmH,MAAO,gBAEX,CACInH,MAAO,YACPmH,MAAO,aAEX,CACInH,MAAO,cACPmH,MAAO,eAEX,CACInH,MAAO,YACPmH,MAAO,aAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,eACPmH,MAAO,gBAEX,CACInH,MAAO,uBACPmH,MAAO,wBAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,QACPmH,MAAO,WAKnB,CACInH,MAAO,SACPmH,MAAO,SACPpG,SAAU,CACN,CACIf,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,eACPmH,MAAO,gBAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,OACPmH,MAAO,QAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,gBACPmH,MAAO,iBAEX,CACInH,MAAO,cACPmH,MAAO,eAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,OACPmH,MAAO,QAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,YACPmH,MAAO,aAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,wBACPmH,MAAO,yBAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,wBACPmH,MAAO,yBAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,aACPmH,MAAO,cAEX,CACInH,MAAO,eACPmH,MAAO,gBAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,eACPmH,MAAO,gBAEX,CACInH,MAAO,cACPmH,MAAO,eAEX,CACInH,MAAO,QACPmH,MAAO,SAEX,CACInH,MAAO,YACPmH,MAAO,aAEX,CACInH,MAAO,WACPmH,MAAO,YAEX,CACInH,MAAO,UACPmH,MAAO,WAEX,CACInH,MAAO,SACPmH,MAAO,UAEX,CACInH,MAAO,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","file":"static/js/main.79f307e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9328371b.png\";","/*\r\n    Function module that can send asynchronous ajax requests\r\n    Package axios library\r\n    The return value of the function is a Promise object\r\n*/\r\n\r\nimport axios from 'axios';\r\nimport {message} from 'antd';\r\n\r\nexport default function ajax(url, data={}, type='GET') {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        let promise;\r\n        // Execute asynchronous ajax requests\r\n        if (type==='GET') {\r\n            promise =  axios.get(url, {\r\n                params: data\r\n            });\r\n        } else {\r\n            promise =  axios.post(url, data);\r\n        }\r\n        promise.then(response => { // If succeeded, invoke resolve(value)\r\n            resolve(response);\r\n        }).catch(error => { // If failed, prompt exception messages instead of invoking reject(value)\r\n            message.error('Request error: ' + error.message);\r\n        });\r\n    });\r\n\r\n    \r\n}\r\n\r\najax('/login', {username: 'WenlongLu', password: '0604'}, 'POST').then();\r\n\r\n// add user\r\najax('/management/user/add', {username: 'WenlongLu', password: '0604', notes: 'This is me' }, 'POST').then();\r\n\r\n\r\n","/*\r\n    Includes modules for all interface request functions in the application\r\n    The return value of each function is a Promise\r\n*/\r\n\r\nimport ajax from './ajax';\r\n\r\nconst BASE = '';\r\n\r\n// login\r\n// export function reqLogin(username, password) {\r\n//     ajax('/login', {username, password}, 'POST');\r\n// }\r\nexport const reqLogin = (username, password) => ajax(BASE + '/login', {username, password}, 'POST');\r\n\r\n// Add or Update user\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/management/user/' + (user._id ? 'update' : 'add'), user, 'POST');\r\n\r\n// Get members paging list\r\nexport const reqMembers = (pageNum, pageSize) => ajax(BASE + '/management/member/list', {pageNum, pageSize});\r\n\r\n// Search members paging list\r\nexport const reqSearchMembers = ({pageNum, pageSize, searchName, searchType}) => ajax(BASE + '/management/member/search', {\r\n    pageNum,\r\n    pageSize,\r\n    searchName,\r\n    searchType\r\n});\r\n\r\n// Delete the specified image\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/management/member/image/delete', {name}, 'POST');\r\n\r\n// Add/Update Member\r\nexport const reqAddOrUpdateMember = (member) => ajax(BASE + '/management/member/' + (member._id ? 'update' : 'add'), member, 'POST');\r\n\r\n// Delete member\r\nexport const reqDeleteMember = (member) => ajax(BASE + '/management/member/delete', member, 'POST');\r\n\r\n// Get the role list\r\nexport const reqRoles = () => ajax(BASE + '/management/role/list');\r\n\r\n// Add new role\r\nexport const reqAddRole = (roleName) => ajax(BASE + '/management/role/add', {roleName}, 'POST');\r\n\r\n// Set role permissions\r\nexport const reqSetRolePermissions = (role) => ajax('/management/role/update', role, 'POST');\r\n\r\n// Delete role\r\nexport const reqDeleteRole = (role) => ajax(BASE + '/management/role/delete', role, 'POST');\r\n\r\n// Get the user list\r\nexport const reqUsers = () => ajax(BASE + '/management/user/list');\r\n\r\n// Delete user\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/management/user/delete', {userId}, 'POST');\r\n\r\n// Get events list\r\nexport const reqEvents = () => ajax(BASE + '/calendar/events');\r\n\r\n// Add new event\r\nexport const reqAddEvent = (events) => ajax(BASE + '/calendar/add', events, 'POST');","/**\r\n * Tool module for storing some data in memory\r\n */\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    user: {} // Save the currently logged user\r\n}","/**\r\n * Tool module for local data storage management\r\n */\r\nimport store from 'store';\r\n\r\nconst USER_KEY = 'user_key';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n\r\n    saveUser (user) {\r\n        //localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n        store.set(USER_KEY, user);\r\n    },\r\n\r\n    getUser () {\r\n        //return JSON.parse(localStorage.getItem(USER_KEY) || '{}');\r\n        return store.get(USER_KEY) || {};\r\n    },\r\n\r\n    removeUser () {\r\n        //localStorage.removeItem(USER_KEY);\r\n        store.remove(USER_KEY);\r\n    }\r\n\r\n }","import React from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nimport './login.less';\r\nimport logo from '../../assets/images/logo.png';\r\nimport {reqLogin} from '../../api';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport memoryUtils from '../../utils/memoryUtils';\r\nimport storageUtils from '../../utils/storageUtils';\r\n\r\nconst Login = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const user = memoryUtils.user;\r\n    if (user && user._id) {\r\n        return <Redirect to='/'/>\r\n    }\r\n\r\n    // \"values\" includes an array of all form data\r\n    const onFinish = values => {\r\n        \r\n        // console.log('Received values of form: ',values);\r\n        form.validateFields()\r\n            .then(async values => {\r\n                //console.log(values);\r\n                // Login request\r\n                const {username, password} = values;\r\n                const response = await reqLogin(username, password);\r\n                //console.log('Request Success', response.data);\r\n                const result = response.data; // {status: 0, data: user} {status: 1, msg: 'xxx'}\r\n                if (result.status===0) { // Login successfully\r\n                    message.success('Login successfully!');\r\n                    const user = result.data;\r\n                    memoryUtils.user = user; // Save the user in the memory\r\n                    storageUtils.saveUser(user); // Save the user into local memory\r\n                    // Jump to another screen (no need to go back to Login page)\r\n                    history.replace('/');\r\n                } else { // Login failed\r\n                    message.error(result.msg);\r\n                }\r\n            })\r\n            .catch(errorInfo => {\r\n                console.log(errorInfo);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <header className=\"login-header\">\r\n                <img src={logo} alt=\"logo\"/>\r\n                <h1>RNG E-Sports Club</h1>\r\n            </header>\r\n            <section className=\"login-content\">\r\n                <h2>Login</h2>\r\n                <Form className=\"login-form\" onFinish={onFinish} form={form}>\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[\r\n                            { required: true, message: 'Please input your Username!' },\r\n                            { min: 4, message: 'Username must be at least 4 characters!'},\r\n                            { max: 12, message: 'Username can be at most 12 characters!'},\r\n                            { pattern: /^[a-zA-Z0-9_]+$/, message: 'Username must consist of letters, numbers or underscores!'},\r\n                        ]}\r\n                    >\r\n\r\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                    \r\n                    </Form.Item>\r\n\r\n                    <Form.Item \r\n                        name=\"password\" \r\n                        rules={[\r\n                            { required: true, message: 'Please input your Password!' },\r\n                            {\r\n                                validator: (_, value) => {\r\n                                    //console.log('validator()', value);\r\n                                    if (!value) {\r\n                                        return Promise.reject(\"Password must be entered!\");\r\n                                    } else if (value.length<4) {\r\n                                        return Promise.reject(\"Password cannot be less than 4 characters!\");\r\n                                    } else if (value.length>12) {\r\n                                        return Promise.reject(\"Password cannot be more than 12 characters!\");\r\n                                    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n                                        return Promise.reject(\"Password must consist of letters, numbers or underscores!\");\r\n                                    } else {\r\n                                        return Promise.resolve();\r\n                                    }\r\n                                }\r\n                            },                        \r\n                        ]}\r\n                    >\r\n                        \r\n                        <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"Password\" />\r\n                    \r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </section>\r\n        </div>\r\n    );\r\n    \r\n\r\n}\r\n\r\nexport default Login;","import {\r\n    HomeOutlined,\r\n    ScheduleOutlined,\r\n    TeamOutlined,\r\n    BarsOutlined\r\n  } from '@ant-design/icons';\r\n\r\nconst menuList = [\r\n    {\r\n        title: 'Homepage: Team',\r\n        key: 'homepage',\r\n        icon: <HomeOutlined />,\r\n        route: '/home',\r\n        isPublic: true\r\n    },\r\n    {\r\n        title: 'Calendar',\r\n        key: 'calendar',\r\n        icon: <ScheduleOutlined />,\r\n        route: '/calendar'\r\n    },\r\n    {\r\n        title: 'Members',\r\n        key: 'member',\r\n        icon: <TeamOutlined />,\r\n        route: '/member'\r\n    },\r\n    {\r\n        title: 'Management',\r\n        key: 'management',\r\n        icon: <BarsOutlined />,\r\n        route: '/management',\r\n        children: [\r\n            {\r\n                title: 'Members Management',\r\n                key: 'member management',\r\n                route: '/management/member'\r\n            },\r\n            {\r\n                title: 'User Management',\r\n                key: 'user management',\r\n                route: '/management/user'\r\n            },\r\n            {\r\n                title: 'Role Management',\r\n                key: 'role management',\r\n                route: '/management/role'\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default menuList;","import React, {Component} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Menu } from 'antd';\r\n// import {\r\n//     HomeOutlined,\r\n//     ScheduleOutlined,\r\n//     TeamOutlined,\r\n//     BarsOutlined\r\n//   } from '@ant-design/icons';\r\nimport './index.less';\r\nimport logo from '../../assets/images/logo.png';\r\nimport menuList from '../../config/menuConfig'; \r\nimport memoryUtils from '../../utils/memoryUtils';\r\n\r\nconst {SubMenu} = Menu;\r\nclass LeftNav extends Component {\r\n\r\n    // Identify whether the currently logged in user has permission to the item\r\n    hasAuth = (item) => {\r\n\r\n        const {route, isPublic} = item;\r\n        const menus = memoryUtils.user.role.menus;\r\n        const username = memoryUtils.user.username;\r\n        /*\r\n        1. If the current user is admin, return true\r\n        2. If the item is public\r\n        3. If the current user has permission to this item (whether 'route' is in the array 'menus')\r\n        */\r\n        if (username==='admin' || isPublic || menus.indexOf(route)!==-1) {\r\n            return true;\r\n        } else if (item.children) { // 4. It the current user has permission to the sub-item of this item\r\n            return !!item.children.find(child => menus.indexOf(child.route)!==-1);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // getMenuNodes_map = (menuList) => {\r\n    //     return menuList.map(item => {\r\n    //         if (!item.children) {\r\n    //             return (\r\n    //                 <Menu.Item key={item.key} icon={item.icon}>\r\n    //                     <Link to={item.route}>\r\n    //                         {item.title}\r\n    //                     </Link>\r\n    //                 </Menu.Item>\r\n    //             );\r\n    //         } else {\r\n    //             return (\r\n    //                 <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n    //                     {this.getMenuNodes(item.children)}\r\n    //                 </SubMenu>\r\n    //             );\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    getMenuNodes = (menuList) => {\r\n\r\n        const path = this.props.location.pathname;\r\n\r\n        return menuList.reduce((pre, item) => {\r\n\r\n            // If the current user has the permission to the item, then display that item of the menu\r\n            if (this.hasAuth(item)) {\r\n                if (!item.children) {\r\n                    pre.push((\r\n                        <Menu.Item key={item.key} icon={item.icon}>\r\n                            <Link to={item.route}>\r\n                                {item.title}\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    ));\r\n                } else {\r\n                    const cItem = item.children.find( cItem => path.indexOf(cItem.route)===0);\r\n                    if (cItem) {\r\n                        this.openKey = item.key\r\n                    }\r\n                    \r\n                    pre.push((\r\n                        <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n                            {this.getMenuNodes(item.children)}\r\n                        </SubMenu>\r\n                    ));\r\n                }\r\n            }\r\n\r\n            return pre;\r\n        }, []);\r\n    }\r\n\r\n    // Execute only once before the first render()\r\n    UNSAFE_componentWillMount () {\r\n        this.menuNodes = this.getMenuNodes(menuList);\r\n    }\r\n\r\n    render () {\r\n\r\n        let path = this.props.location.pathname;\r\n        const openKey = this.openKey;\r\n        if (path.indexOf('member')===0) { // The current request is for a member or its subrouting interface\r\n            path = '/member';\r\n        }\r\n\r\n        return (\r\n                <div className=\"left-nav\">\r\n                    <Link to='/' className=\"left-nav-header\">\r\n                        <img src={logo} alt=\"logo\"/>\r\n                    </Link>\r\n\r\n                    <Menu\r\n                        defaultOpenKeys={[openKey]}\r\n                        selectedKeys={[path]}\r\n                        mode=\"inline\"\r\n                        theme=\"dark\"\r\n                        >\r\n                        {/* <Menu.Item key=\"/home\" icon={<HomeOutlined />}>\r\n                            <Link to='/home'>\r\n                                Homepage: Team\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"/calendar\" icon={<ScheduleOutlined />}>\r\n                            <Link to='/calendar'>\r\n                                Calendar\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"/member\" icon={<TeamOutlined />}>\r\n                            <Link to='/member'>\r\n                                Members\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <SubMenu key=\"Management\" icon={<BarsOutlined />} title=\"Management\">\r\n                            <Menu.Item key=\"/management/member\" >\r\n                                <Link to='/management/member'>\r\n                                    Members Management\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"/management/user\" >\r\n                                <Link to='/management/user'>\r\n                                    User Management\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"/management/role\" >\r\n                                <Link to='/management/role'>\r\n                                    Role Management\r\n                                </Link>\r\n                            </Menu.Item>\r\n                        </SubMenu> */}\r\n                        \r\n                        {\r\n                            this.menuNodes\r\n                        }\r\n\r\n                    </Menu>\r\n                </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LeftNav);","export function formatDate(time) {\r\n    if (!time) return '';\r\n    let date = new Date(time);\r\n    return date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\r\n}","import React, {Component} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Modal, Button } from 'antd';\r\nimport { ExclamationCircleOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport './index.less';\r\nimport { formatDate } from '../../utils/dateUtils';\r\nimport memoryUtils from '../../utils/memoryUtils';\r\nimport storageUtils from '../../utils/storageUtils';\r\nimport menuList from '../../config/menuConfig';\r\nclass Header extends Component {\r\n\r\n    state = {\r\n        currentTime: formatDate(Date.now()), // String of current time\r\n    }\r\n\r\n    getTime = () => {\r\n        this.intervalId = setInterval(() => {\r\n            const currentTime = formatDate(Date.now());\r\n            this.setState({currentTime});\r\n        }, 1000);\r\n    }\r\n\r\n    getTitle = () => {\r\n        const path = this.props.location.pathname;\r\n        let title;\r\n        menuList.forEach(item => {\r\n            if (item.route===path) {\r\n                title = item.title;\r\n            } else if (item.children) {\r\n                const cItem = item.children.find(cItem => path.indexOf(cItem.route)===0);\r\n                if (cItem) {\r\n                    title = cItem.title\r\n                }\r\n            }\r\n        });\r\n        switch (path) {\r\n            case '/home/LPLSpring': title = 'LPL Spring'; break;\r\n            case '/home/LPLSummer': title = 'LPL Summer'; break;\r\n            case '/home/MSI': title = 'MSI'; break;\r\n            case '/home/World': title = 'World'; break;\r\n            case '/member/details': title = 'Member details'; break;\r\n            default: break;\r\n        }\r\n        return title;\r\n    }\r\n\r\n    // Execute once after the first execution of render()\r\n    // Send ajax request or launch timer\r\n    componentDidMount() {\r\n        this.getTime();\r\n    }\r\n\r\n    // Called before the current component is unloaded\r\n    componentWillUnmount () {\r\n        // Clear Timer\r\n        clearInterval(this.intervalId);\r\n    }\r\n\r\n    // Logout the current account\r\n    logout = () => {\r\n        Modal.confirm({\r\n            title: 'Do you want to logout?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            onOk: () => {\r\n                // Remove the stored data of user\r\n                storageUtils.removeUser();\r\n                memoryUtils.user = {};\r\n                this.props.history.replace('/login');\r\n            }\r\n        });\r\n    }   \r\n\r\n    render () {\r\n\r\n        const {currentTime} = this.state;\r\n\r\n        const username = memoryUtils.user.username;\r\n\r\n        const title =  this.getTitle();\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <span>Welcome, {username}</span>\r\n                    <Button className=\"header-top-button\" onClick={this.logout} icon={<LogoutOutlined />} type=\"link\">Logout</Button>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-left\">{title}</div>\r\n                    <div className=\"header-bottom-right\">\r\n                        <span>{currentTime}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","import React, {Component} from 'react';\r\nimport './home.less';\r\n\r\nexport default class HomePage extends Component {\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"levels\">\r\n                    <div className=\"level one\" onClick={() => this.props.history.push('/home/LPLSpring')}>\r\n                        <div className=\"title\">LPL Spring</div>\r\n                        <div className=\"content\">Best record: Champion</div>\r\n                    </div>\r\n                    <div className=\"level two\" onClick={() => this.props.history.push('/home/LPLSummer')}>\r\n                        <div className=\"title\">LPL Summer</div>\r\n                        <div className=\"content\">Best record: Champion</div>\r\n                    </div>\r\n                    <div className=\"level three\" onClick={() => this.props.history.push('/home/MSI')}>\r\n                        <div className=\"title\">MSI</div>\r\n                        <div className=\"content\">Best record: Champion</div>\r\n                    </div>\r\n                    <div className=\"level four\" onClick={() => this.props.history.push('/home/World')}>\r\n                        <div className=\"title\">World</div>\r\n                        <div className=\"content\">Best record: Runner-up</div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            \r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Spring2021.e2379e78.jpg\";","export default __webpack_public_path__ + \"static/media/RNGcurtain.6199dfe7.png\";","export default __webpack_public_path__ + \"static/media/photo2021.59926415.jpg\";","import React, {Component} from 'react';\r\nimport { Button, Card } from 'antd';\r\nimport {ArrowLeftOutlined} from '@ant-design/icons';\r\nimport './style.less'\r\n\r\nimport img1 from '../../assets/images/Spring2021.jpg';\r\nimport img2 from '../../assets/images/RNGcurtain.png';\r\nimport img3 from '../../assets/images/photo2021.jpg';\r\n\r\nexport default class LPLSpring extends Component {\r\n    render () {\r\n\r\n        const title = (\r\n            <span>\r\n                <Button \r\n                type='link' \r\n                icon={<ArrowLeftOutlined style={{color: '#B49169', marginRight: 5, fontSize: 20}}/>}\r\n                onClick={() => this.props.history.goBack()}\r\n                >\r\n                </Button>\r\n                <span>LPL Spring</span>\r\n            </span>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                <Card title={title}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-10 m-auto\">\r\n                            <div>\r\n                                <h5>Champion</h5>\r\n                                <h1>A joint effort by all</h1>\r\n                                <p>This is the third spring championship of RNG in the LPL. This time, RNG won the final championship by beating 3 players in the group of defeaters in the playoffs.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                    <div>\r\n                        <div style={{textAlign: 'center', marginTop: 20}}>\r\n                            <img style={{maxWidth: 700}} src={img1} alt=\"\"/>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <p class=\"p-content\">CONGRATULATIONS to RNG for winning the 2021 LPL Spring Championship with a 3-1 victory over FPX! They will also represent LPL at MSI 2021!</p>\r\n                                <p>This spring, RNG shouldered all the expectations and doubts, and rode the waves. </p><p>A season of hard work and hard work has resulted in endless surprises, and although we have been in the abyss, we have never hit rock bottom. </p><p>Today, RNG is shining, just to watch the gold fall across the sky again. </p><p>The RNG are announcing to the world that their journey is much more than that, that they are aiming for the sky and that their ambition is to go far!\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div style={{flex: 10, maxWidth: 500, margin: 30}}>\r\n                                <div class=\"image-v\">\r\n                                    <img src={img2} alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{flex: 10, maxWidth: 500, margin: 30}}>\r\n                                <div class=\"image-v\">\r\n                                    <img src={img3} alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                                <blockquote className=\"blockquote\">\r\n                                This is the power of the new generation of juniors and we expect and aspire to better results.\r\n                                </blockquote>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n                \r\n            </>\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/2018Summer1.d89a8d79.jpg\";","export default __webpack_public_path__ + \"static/media/2018Summer2.a4d96108.jpg\";","export default __webpack_public_path__ + \"static/media/2018Summer3.0eb0d645.jpg\";","import React, {Component} from 'react';\r\nimport { Button, Card } from 'antd';\r\nimport {ArrowLeftOutlined} from '@ant-design/icons';\r\n\r\nimport './style.less'\r\n\r\nimport img1 from '../../assets/images/2018Summer1.jpg';\r\nimport img2 from '../../assets/images/2018Summer2.jpg';\r\nimport img3 from '../../assets/images/2018Summer3.jpg';\r\n\r\nexport default class LPLSummer extends Component {\r\n    render () {\r\n\r\n        const title = (\r\n            <span>\r\n                <Button \r\n                type='link' \r\n                icon={<ArrowLeftOutlined style={{color: '#B49169', marginRight: 5, fontSize: 20}}/>}\r\n                onClick={() => this.props.history.goBack()}\r\n                >\r\n                </Button>\r\n                <span>LPL Summer</span>\r\n            </span>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                <Card title={title}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-10 m-auto\">\r\n                            <div>\r\n                                <h5>2018 LPL Summer Champion</h5>\r\n                                <h1>The second step in the writing of a legend</h1>\r\n                                <p>It was the second title for RNG in 2018, as the RNG won the summer tournament in raging style.  It was a continuation of competitive shape and legendary storytelling.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                    <div>\r\n                        <div style={{textAlign: 'center', marginTop: 20}}>\r\n                            <img style={{maxWidth: 700}} src={img1} alt=\"\"/>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <p class=\"p-content\">RNG and iG have both secured their tickets to the Worlds. In a series of tournaments this year LPL's teams have shown their strength to all regions of the world and the competitive game is bound to compete for first place.</p>\r\n                                <p>RNG took on IG in a BO5 five-game, three-win format. </p><p>In the first game, RNG scored a point, Uzi Kaisa played well and won the MVP.</p><p>In the second game, RNG's opening line change tactics successfully suppressed IG, Uzi was unstoppable and then cut the MVP, RNG 2-0 to get the match point.</p><p>In the third game, after NING grabbed the dragon, IG turned the tide against the wind and pulled back a city.</p><p>In the fourth game, IG took a perfect BP.</p><p>In the fifth game, RNG replaced the jungler mlxg. RNG in the middle was broken two roads, but also two incisors forced, in the final group battle in the double c perfect play against the wind flip, 3-2 victory over IG to win the LPL summer finals championship.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div style={{flex: 10, maxWidth: 500, margin: 30}}>\r\n                                <div class=\"image-v\">\r\n                                    <img src={img2} alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{flex: 10, maxWidth: 500, margin: 30}}>\r\n                                <div class=\"image-v\">\r\n                                    <img src={img3} alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                                <blockquote className=\"blockquote\">\r\n                                2018 has been a lucky year for the RNG, and hopefully it will bring good fortune to the end.\r\n                                </blockquote>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n                \r\n            </>\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/MSI1.c564a752.jpg\";","export default __webpack_public_path__ + \"static/media/MSI2.09359d82.jpg\";","export default __webpack_public_path__ + \"static/media/MSI3.ec5bf2b3.jpg\";","import React, {Component} from 'react';\r\nimport { Button, Card } from 'antd';\r\nimport {ArrowLeftOutlined} from '@ant-design/icons';\r\n\r\nimport './style.less'\r\n\r\nimport img1 from '../../assets/images/MSI1.jpg';\r\nimport img2 from '../../assets/images/MSI2.jpg';\r\nimport img3 from '../../assets/images/MSI3.jpg';\r\n\r\nexport default class MSI extends Component {\r\n    render () {\r\n\r\n        const title = (\r\n            <span>\r\n                <Button \r\n                type='link' \r\n                icon={<ArrowLeftOutlined style={{color: '#B49169', marginRight: 5, fontSize: 20}}/>}\r\n                onClick={() => this.props.history.goBack()}\r\n                >\r\n                </Button>\r\n                <span>Mid-Season Invitational</span>\r\n            </span>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                <Card title={title}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-10 m-auto\">\r\n                            <div>\r\n                                <h5>First MSI Champion</h5>\r\n                                <h1>The first World Championship title for RNG</h1>\r\n                                <p>After so many years, the LPL once again defeated a South Korean team that was as good as it gets at the Worlds, and the RNG's year really grew the LPL.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                    <div>\r\n                        <div style={{textAlign: 'center', marginTop: 20}}>\r\n                            <img style={{maxWidth: 700}} src={img1} alt=\"\"/>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                <p class=\"p-content\">RNG took this year's title against KZ of the LCK division. There have been such encounters in the past, but the result was not a win and left a regret. But this year, they finally got their wish and won the MSI championship.</p>\r\n                                <p>After RNG got the match point, that is, in the fourth game, when UZI's Kasha died in the dragon pit, it gave people a chill, because such a scene has been seen before.</p><p>The next wave, letme's Aoun released a big move, followed by Xiaohu's big live KZ's auxiliary Luo, and letme's big move at this time also knocked two people away, creating favorable conditions for Uzi's harvest, this wave of the group battle the other side's double C died, and RNG ended the game in one wave.</p><p>When RNG was about to wave, commentator Miller mentioned something in it, saying that a famous top single had said a sentence, four Chinese can't win, but five Chinese can definitely win. There was somehow a heartbreak when hearing this, but RNG's victory this time was a relief. And after the win, UZI and Xiaohu got up and hugged each other at the same time, that image was really touching.</p><p>And the other is in small enough to touch the trophy, RNG's wilderness karsa, after helping the puppy, after that one action he cried, possibly for RNG to take this not easy championship, but also possibly for UZI this six years to finally realize their wish, but also may be to their own persistence has been rewarded.</p><p>When the RNG got the trophy to leave, the spicy pot in the resistance to the trophy they won, strutting down, just like when harvesting the crops when the big harvest, but also let us see the RNG persistence.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div style={{flex: 10, maxWidth: 500, margin: 30}}>\r\n                                <div class=\"image-v\">\r\n                                    <img src={img2} alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{flex: 10, maxWidth: 500, margin: 30}}>\r\n                                <div class=\"image-v\">\r\n                                    <img src={img3} alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                                <blockquote className=\"blockquote\">\r\n                                This is a landmark championship and a dynasty is being built.\r\n                                </blockquote>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n                \r\n            </>\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/World1.94d268b3.jpg\";","export default __webpack_public_path__ + \"static/media/World2.e0873c4c.jpg\";","export default __webpack_public_path__ + \"static/media/World3.aa174ac2.jpg\";","import React, {Component} from 'react';\r\nimport { Button, Card } from 'antd';\r\nimport {ArrowLeftOutlined} from '@ant-design/icons';\r\n\r\nimport './style.less'\r\n\r\nimport img1 from '../../assets/images/World1.jpg';\r\nimport img2 from '../../assets/images/World2.jpg';\r\nimport img3 from '../../assets/images/World3.jpg';\r\n\r\nexport default class World extends Component {\r\n    render () {\r\n\r\n        const title = (\r\n            <span>\r\n                <Button \r\n                type='link' \r\n                icon={<ArrowLeftOutlined style={{color: '#B49169', marginRight: 5, fontSize: 20}}/>}\r\n                onClick={() => this.props.history.goBack()}\r\n                >\r\n                </Button>\r\n                <span>World</span>\r\n            </span>\r\n        );\r\n\r\n        return (\r\n            <>\r\n            <Card title={title}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-10 m-auto\">\r\n                        <div>\r\n                            <h5>Fight For World Champion 2021</h5>\r\n                            <h1>To break the record of consecutive runners-up in Season 4 and 5</h1>\r\n                            <p>RNG took runners-up in Seasons 4 and 5 and won all but the Worlds in a most promising 2018, but unfortunately, eventually fell in the last 8 at Worlds.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>   \r\n                <div>\r\n                    <div style={{textAlign: 'center', marginTop: 20}}>\r\n                        <img style={{maxWidth: 700}} src={img1} alt=\"\"/>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <p class=\"p-content\">RNG took this year's title against KZ of the LCK division. There have been such encounters in the past, but the result was not a win and left a regret. But this year, they finally got their wish and won the MSI championship.</p>\r\n                            <p>RNG have always been a dominant team in the LPL, taking second place in the world for two years in a row since the LPL began competing in the Worlds.</p><p>At Season 7, RNG began to give the audience confidence that they could battle the mighty LCK division, and although they lost in the quarterfinals of the Worlds, this defeat has proven that RNG was always capable of beating the strongest team at the time, SKT.</p><p>In Season 8, RNG made a comeback and won every tournament in a row with ferocity. Firstly, they won the LPL's Spring Championship, and then they were ordered to play in the mid-season championship to help the LPL win the title.</p><p>In the Asian Rivalry, RNG was seen as the unbeatable team and helped LPL hold on to the Asian Rivalry trophy with a late extra game.</p><p>In a year of great significance, RNG sent four players to the Asian Games, and another LPL powerhouse managed to get the gold medal.</p><p>In the summer tournament, RNG got the title and entered the Worlds as the number one seed with a lot of momentum.</p><p>In the final Worlds, while all the fans were expecting to see RNG take the final title, something unfortunate happened and they ended up falling in the last eight, leaving the fans with a huge gap in their emotions.</p><p>In the 2 years that followed, RNG's results were on a downward spiral and the veteran players of yesteryear retired, unable to withstand the pressure of time.</p><p>In this brand new 2021 season, the otherwise unheralded fledgling RNG took the spring championship and took on the challenge of a whole new year, hoping to do well in the final Worlds of the year.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div style={{flex: 10, maxWidth: 500, margin: 30}}>\r\n                            <div class=\"image-v\">\r\n                                <img src={img2} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{flex: 10, maxWidth: 500, margin: 30}}>\r\n                            <div class=\"image-v\">\r\n                                <img src={img3} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                            <blockquote className=\"blockquote\">\r\n                            Hit the championship with a brand new attitude.\r\n                            </blockquote>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n            \r\n        </>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nimport HomePage from './index';\r\nimport LPLSpring from './LPLSpring';\r\nimport LPLSummer from './LPLSummer';\r\nimport MSI from './MSI';\r\nimport World from './World';\r\n\r\n\r\n\r\nexport default class Home extends Component {\r\n    render () {\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/home' component={HomePage}/>\r\n                <Route path='/home/LPLSpring' component={LPLSpring}/>\r\n                <Route path='/home/LPLSummer' component={LPLSummer}/>\r\n                <Route path='/home/MSI' component={MSI}/>\r\n                <Route path='/home/World' component={World}/>\r\n                <Redirect to='/home'/>\r\n            </Switch>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport './event-form.less';\r\n\r\nconst {List, Item} = Form;\r\n\r\nexport default class EventForm extends Component {\r\n\r\n    formRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        setForm: PropTypes.func.isRequired,\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.props.setForm(this.formRef);\r\n    }\r\n\r\n    render() {\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n              xs: { span: 24 },\r\n              sm: { span: 4 },\r\n            },\r\n            wrapperCol: {\r\n              xs: { span: 24 },\r\n              sm: { span: 20 },\r\n            },\r\n        };\r\n\r\n        const formItemLayoutWithOutLabel = {\r\n            wrapperCol: {\r\n              xs: { span: 24, offset: 0 },\r\n              sm: { span: 20, offset: 4 },\r\n            },\r\n        };\r\n\r\n        return (\r\n            <Form ref={this.formRef} {...formItemLayoutWithOutLabel}>\r\n                <List \r\n                    name=\"events\"\r\n                >\r\n                    {(fields, { add, remove }, { errors }) => (\r\n                        <>\r\n                            {fields.map((field, index) => (\r\n                                <Item\r\n                                    {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                                    label={index === 0 ? 'Events' : ''}\r\n                                    required={false}\r\n                                    key={field.key}\r\n                                >\r\n                                    <Item\r\n                                        {...field}\r\n                                        validateTrigger={['onChange', 'onBlur']}\r\n                                        rules={[\r\n                                            {\r\n                                            required: true,\r\n                                            whitespace: true,\r\n                                            message: \"Please input the event or delete this field.\",\r\n                                            },\r\n                                        ]}\r\n                                        noStyle\r\n                                    >\r\n                                        <Input placeholder=\"Event\" style={{ width: '60%' }} />\r\n                                    </Item>\r\n                                    {fields.length > 1 ? (\r\n                                        <MinusCircleOutlined\r\n                                            className=\"dynamic-delete-button\"\r\n                                            onClick={() => remove(field.name)}\r\n                                        />\r\n                                    ) : null}\r\n                                </Item>\r\n                            ))}\r\n                            <Item key=\"newEvent\">\r\n                                <Button\r\n                                    type=\"dashed\"\r\n                                    onClick={() => add()}\r\n                                    style={{ width: '60%' }}\r\n                                    icon={<PlusOutlined />}\r\n                                >\r\n                                    Add new event\r\n                                </Button>\r\n                                <Form.ErrorList errors={errors} />\r\n                            </Item>\r\n                        </>\r\n                    )}\r\n                </List>\r\n            </Form>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Calendar, Badge, Alert, Button, Modal, message } from 'antd';\r\nimport moment from 'moment';\r\nimport { formatDate } from '../../utils/dateUtils';\r\nimport EventForm from './event-form';\r\nimport { reqAddEvent, reqEvents } from '../../api';\r\nimport memoryUtils from '../../utils/memoryUtils';\r\n\r\nexport default class TeamCalendar extends Component {\r\n\r\n  state = {\r\n    value: moment(formatDate(Date.now())),\r\n    selectedValue: moment(formatDate(Date.now())),\r\n    isShownEventForm: false,\r\n    allEvents: []\r\n  };\r\n\r\n  onSelect = value => {\r\n    this.setState({\r\n      value,\r\n      selectedValue: value\r\n    });\r\n    //console.log(this.state.value)\r\n  }\r\n    \r\n  onPanelChange = value => {\r\n    this.setState({\r\n      value\r\n    });\r\n  }\r\n\r\n  addEvent = () => {\r\n    this.form.current.validateFields()\r\n      .then( async values => {\r\n        this.setState({\r\n          isShownEventForm: false\r\n        });\r\n        // console.log(values)\r\n        // console.log(this.state.value)\r\n        // console.log(this.state.selectedValue)\r\n        // console.log(this.state.selectedValue.date())\r\n\r\n        // let eventsList = [];\r\n        // for (let i = 0; i < values.events.length; i++) {\r\n        //   eventsList.push({date: this.state.selectedValue.date(), type: 'success', content: values.events[i]});            \r\n        // }\r\n        this.form.current.resetFields();\r\n\r\n        const {events} = values;\r\n        const eventsToAdd = {date: this.state.selectedValue, eventList: events};\r\n        const result = await reqAddEvent(eventsToAdd);\r\n        if (result.data.status===0) {\r\n          message.success('Successfully added events!');\r\n          this.getEvents();\r\n        } else {\r\n          message.error('Failed to add events.');\r\n        }\r\n        \r\n      })\r\n      .catch(errorInfo => {  \r\n        console.log(errorInfo);\r\n      });\r\n  }\r\n\r\n  getEvents = async () => {\r\n    const result = await reqEvents();\r\n    //console.log(result.data.data[0].date)\r\n    //console.log(moment(formatDate(result.data.data[0].date)).month())\r\n\r\n    if (result.data.status===0) {\r\n      const allEvents = result.data.data;\r\n      this.setState({\r\n        allEvents\r\n      });\r\n      //console.log(allEvents)\r\n      //console.log(this.state.allEvents);\r\n    }\r\n    \r\n  }\r\n\r\n  isAbleToEditCalendar() {\r\n    //console.log(memoryUtils.user.role.menus.indexOf('/management') > -1)\r\n    if (memoryUtils.user.username === 'admin') return true;\r\n    else if (memoryUtils.user.role.menus.indexOf('/management') > -1) return true;\r\n    else return false;\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.getEvents();\r\n  }\r\n\r\n  render () {\r\n    \r\n    const { value, selectedValue, isShownEventForm, allEvents } = this.state;  \r\n\r\n    function getListData(value) {\r\n      let listData = [];\r\n      // console.log(value.year())\r\n      // console.log(value.month()+1)\r\n      // console.log(value.date())\r\n      // console.log(allEvents.length)\r\n      // console.log(allEvents[0] ? moment(formatDate(allEvents[0].date)).date() : [])\r\n      allEvents.map(item => {\r\n        if (value.year() === item ? moment(formatDate(item.date)).year() : []) {\r\n          if (value.month() === moment(formatDate(item.date)).month()) {\r\n            if (value.date() === moment(formatDate(item.date)).date()) {\r\n              for (let i = 0; i < item.eventList.length; i++) {\r\n                listData.push({content: item.eventList[i]});\r\n              }\r\n            }\r\n          }\r\n        }\r\n        //console.log(listData)\r\n        return listData || [];\r\n      });\r\n      return listData || [];\r\n    }\r\n      \r\n    function dateCellRender(value) {\r\n      const listData = getListData(value);\r\n      //console.log(listData)\r\n      return (\r\n        <ul className=\"events\">\r\n          {listData.map(item => (\r\n            <li key={item.content}>\r\n              <Badge color={'#' + Math.random().toString(16).substr(2, 6)} text={item.content} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }    \r\n            \r\n    return (\r\n      <>\r\n        <Alert message={`You selected date: ${selectedValue && selectedValue.format('YYYY/MM/DD')}`}/>\r\n        <Button type='primary' disabled={!this.isAbleToEditCalendar()} onClick={() => this.setState({isShownEventForm: true})}>Edit Events</Button>\r\n        <Calendar \r\n          dateCellRender={dateCellRender} \r\n          value={value}\r\n          onSelect={this.onSelect}\r\n          onPanelChange={this.onPanelChange}\r\n        />\r\n        <Modal\r\n          title='Edit Event'\r\n          visible={isShownEventForm}\r\n          onOk={this.addEvent}\r\n          onCancel={() => {\r\n              this.setState({\r\n                isShownEventForm: false\r\n              });\r\n              this.form.current.resetFields();\r\n          }}\r\n      >\r\n          <EventForm\r\n              setForm={(form) => this.form = form}\r\n          />\r\n      </Modal>  \r\n      </>\r\n    );\r\n  }\r\n}","export const PAGE_SIZE = 3; \r\n//export const BASE_IMAGE_URL = 'http://localhost:80/upload/'; // on localhost\r\nexport const BASE_IMAGE_URL = 'http://54.217.174.185:80/upload/'; // on AWS server\r\nexport const nationalityList = [\r\n    {\r\n        value: 'Europe',\r\n        label: 'Europe',\r\n        children: [\r\n            {\r\n                value: 'Albania',\r\n                label: 'Albania',\r\n            },\r\n            {\r\n                value: 'Austria',\r\n                label: 'Austria',\r\n            },\r\n            {\r\n                value: 'Belarus',\r\n                label: 'Belarus',\r\n            },\r\n            {\r\n                value: 'Belgium',\r\n                label: 'Belgium',\r\n            },\r\n            {\r\n                value: 'Bosnia and Herzegovina',\r\n                label: 'Bosnia and Herzegovina',\r\n            },\r\n            {\r\n                value: 'Bulgaria',\r\n                label: 'Bulgaria',\r\n            },\r\n            {\r\n                value: 'Croatia',\r\n                label: 'Croatia',\r\n            },\r\n            {\r\n                value: 'Cyprus',\r\n                label: 'Cyprus',\r\n            },\r\n            {\r\n                value: 'Czech Republic',\r\n                label: 'Czech Republic',\r\n            },\r\n            {\r\n                value: 'Denmark',\r\n                label: 'Denmark',\r\n            },\r\n            {\r\n                value: 'Estonia',\r\n                label: 'Estonia',\r\n            },\r\n            {\r\n                value: 'Euro Area',\r\n                label: 'Euro Area',\r\n            },\r\n            {\r\n                value: 'European Union',\r\n                label: 'European Union',\r\n            },\r\n            {\r\n                value: 'Faroe Islands',\r\n                label: 'Faroe Islands',\r\n            },\r\n            {\r\n                value: 'Finland',\r\n                label: 'Finland',\r\n            },\r\n            {\r\n                value: 'France',\r\n                label: 'France',\r\n            },\r\n            {\r\n                value: 'Germany',\r\n                label: 'Germany',\r\n            },\r\n            {\r\n                value: 'Greece',\r\n                label: 'Greece',\r\n            },\r\n            {\r\n                value: 'Hungary',\r\n                label: 'Hungary',\r\n            },\r\n            {\r\n                value: 'Iceland',\r\n                label: 'Iceland',\r\n            },\r\n            {\r\n                value: 'Ireland',\r\n                label: 'Ireland',\r\n            },\r\n            {\r\n                value: 'Italy',\r\n                label: 'Italy',\r\n            },\r\n            {\r\n                value: 'Kosovo',\r\n                label: 'Kosovo',\r\n            },\r\n            {\r\n                value: 'Latvia',\r\n                label: 'Latvia',\r\n            },\r\n            {\r\n                value: 'Liechtenstein',\r\n                label: 'Liechtenstein',\r\n            },\r\n            {\r\n                value: 'Lithuania',\r\n                label: 'Lithuania',\r\n            },\r\n            {\r\n                value: 'Luxembourg',\r\n                label: 'Luxembourg',\r\n            },\r\n            {\r\n                value: 'Macedonia',\r\n                label: 'Macedonia',\r\n            },\r\n            {\r\n                value: 'Malta',\r\n                label: 'Malta',\r\n            },\r\n            {\r\n                value: 'Moldova',\r\n                label: 'Moldova',\r\n            },\r\n            {\r\n                value: 'Monaco',\r\n                label: 'Monaco',\r\n            },\r\n            {\r\n                value: 'Montenegro',\r\n                label: 'Montenegro',\r\n            },\r\n            {\r\n                value: 'Netherlands',\r\n                label: 'Netherlands',\r\n            },\r\n            {\r\n                value: 'Norway',\r\n                label: 'Norway',\r\n            },\r\n            {\r\n                value: 'Poland',\r\n                label: 'Poland',\r\n            },\r\n            {\r\n                value: 'Portugal',\r\n                label: 'Portugal',\r\n            },\r\n            {\r\n                value: 'Romania',\r\n                label: 'Romania',\r\n            },\r\n            {\r\n                value: 'Russia',\r\n                label: 'Russia',\r\n            },\r\n            {\r\n                value: 'Serbia',\r\n                label: 'Serbia',\r\n            },\r\n            {\r\n                value: 'Slovakia',\r\n                label: 'Slovakia',\r\n            },\r\n            {\r\n                value: 'Slovenia',\r\n                label: 'Slovenia',\r\n            },\r\n            {\r\n                value: 'Spain',\r\n                label: 'Spain',\r\n            },\r\n            {\r\n                value: 'Sweden',\r\n                label: 'Sweden',\r\n            },\r\n            {\r\n                value: 'Switzerland',\r\n                label: 'Switzerland',\r\n            },\r\n            {\r\n                value: 'Turkey',\r\n                label: 'Turkey',\r\n            },\r\n            {\r\n                value: 'Ukraine',\r\n                label: 'Ukraine',\r\n            },\r\n            {\r\n                value: 'United Kingdom',\r\n                label: 'United Kingdom',\r\n            },\r\n        ],\r\n        \r\n    },\r\n    {\r\n        value: 'America',\r\n        label: 'America',\r\n        children: [\r\n            {\r\n                value: 'Argentina',\r\n                label: 'Argentina',\r\n            },\r\n            {\r\n                value: 'Aruba',\r\n                label: 'Aruba',\r\n            },\r\n            {\r\n                value: 'Bahamas',\r\n                label: 'Bahamas',\r\n            },\r\n            {\r\n                value: 'Barbados',\r\n                label: 'Barbados',\r\n            },\r\n            {\r\n                value: 'Belize',\r\n                label: 'Belize',\r\n            },\r\n            {\r\n                value: 'Bolivia',\r\n                label: 'Bolivia',\r\n            },\r\n            {\r\n                value: 'Brazil',\r\n                label: 'Brazil',\r\n            },\r\n            {\r\n                value: 'Canada',\r\n                label: 'Canada',\r\n            },\r\n            {\r\n                value: 'Cayman Islands',\r\n                label: 'Cayman Islands',\r\n            },\r\n            {\r\n                value: 'Chile',\r\n                label: 'Chile',\r\n            },\r\n            {\r\n                value: 'Colombia',\r\n                label: 'Colombia',\r\n            },\r\n            {\r\n                value: 'Costa Rica',\r\n                label: 'Costa Rica',\r\n            },\r\n            {\r\n                value: 'Cuba',\r\n                label: 'Cuba',\r\n            },\r\n            {\r\n                value: 'Dominican Republic',\r\n                label: 'Dominican Republic',\r\n            },\r\n            {\r\n                value: 'Ecuador',\r\n                label: 'Ecuador',\r\n            },\r\n            {\r\n                value: 'El Salvador',\r\n                label: 'El Salvador',\r\n            },\r\n            {\r\n                value: 'Guatemala',\r\n                label: 'Guatemala',\r\n            },\r\n            {\r\n                value: 'Guyana',\r\n                label: 'Guyana',\r\n            },\r\n            {\r\n                value: 'Haiti',\r\n                label: 'Haiti',\r\n            },\r\n            {\r\n                value: 'Honduras',\r\n                label: 'Honduras',\r\n            },\r\n            {\r\n                value: 'Jamaica',\r\n                label: 'Jamaica',\r\n            },\r\n            {\r\n                value: 'Mexico',\r\n                label: 'Mexico',\r\n            },\r\n            {\r\n                value: 'Nicaragua',\r\n                label: 'Nicaragua',\r\n            },\r\n            {\r\n                value: 'Panama',\r\n                label: 'Panama',\r\n            },\r\n            {\r\n                value: 'Paraguay',\r\n                label: 'Paraguay',\r\n            },\r\n            {\r\n                value: 'Peru',\r\n                label: 'Peru',\r\n            },\r\n            {\r\n                value: 'Puerto Rico',\r\n                label: 'Puerto Rico',\r\n            },\r\n            {\r\n                value: 'Suriname',\r\n                label: 'Suriname',\r\n            },\r\n            {\r\n                value: 'Trinidad and Tobago',\r\n                label: 'Trinidad and Tobago',\r\n            },\r\n            {\r\n                value: 'United States',\r\n                label: 'United States',\r\n            },\r\n            {\r\n                value: 'Uruguay',\r\n                label: 'Uruguay',\r\n            },\r\n            {\r\n                value: 'Venezuela',\r\n                label: 'Venezuela',\r\n            },\r\n        ],\r\n        \r\n    },\r\n    {\r\n        value: 'Asia',\r\n        label: 'Asia',\r\n        children: [\r\n            {\r\n                value: 'Afghanistan',\r\n                label: 'Afghanistan',\r\n            },\r\n            {\r\n                value: 'Armenia',\r\n                label: 'Armenia',\r\n            },\r\n            {\r\n                value: 'Azerbaijan',\r\n                label: 'Azerbaijan',\r\n            },\r\n            {\r\n                value: 'Bahrain',\r\n                label: 'Bahrain',\r\n            },\r\n            {\r\n                value: 'Bangladesh',\r\n                label: 'Bangladesh',\r\n            },\r\n            {\r\n                value: 'Bhutan',\r\n                label: 'Bhutan',\r\n            },\r\n            {\r\n                value: 'Brunei',\r\n                label: 'Brunei',\r\n            },\r\n            {\r\n                value: 'Cambodia',\r\n                label: 'Cambodia',\r\n            },\r\n            {\r\n                value: 'China',\r\n                label: 'China',\r\n            },\r\n            {\r\n                value: 'East Timor',\r\n                label: 'East Timor',\r\n            },\r\n            {\r\n                value: 'Georgia',\r\n                label: 'Georgia',\r\n            },\r\n            {\r\n                value: 'Hong Kong',\r\n                label: 'Hong Kong',\r\n            },\r\n            {\r\n                value: 'India',\r\n                label: 'India',\r\n            },\r\n            {\r\n                value: 'Indonesia',\r\n                label: 'Indonesia',\r\n            },\r\n            {\r\n                value: 'Iran',\r\n                label: 'Iran',\r\n            },\r\n            {\r\n                value: 'Iraq',\r\n                label: 'Iraq',\r\n            },\r\n            {\r\n                value: 'Israel',\r\n                label: 'Israel',\r\n            },\r\n            {\r\n                value: 'Japan',\r\n                label: 'Japan',\r\n            },\r\n            {\r\n                value: 'Jordan',\r\n                label: 'Jordan',\r\n            },\r\n            {\r\n                value: 'Kazakhstan',\r\n                label: 'Kazakhstan',\r\n            },\r\n            {\r\n                value: 'Kuwait',\r\n                label: 'Kuwait',\r\n            },\r\n            {\r\n                value: 'Kyrgyzstan',\r\n                label: 'Kyrgyzstan',\r\n            },\r\n            {\r\n                value: 'Laos',\r\n                label: 'Laos',\r\n            },\r\n            {\r\n                value: 'Lebanon',\r\n                label: 'Lebanon',\r\n            },\r\n            {\r\n                value: 'Macau',\r\n                label: 'Macau',\r\n            },\r\n            {\r\n                value: 'Malaysia',\r\n                label: 'Malaysia',\r\n            },\r\n            {\r\n                value: 'Maldives',\r\n                label: 'Maldives',\r\n            },\r\n            {\r\n                value: 'Mongolia',\r\n                label: 'Mongolia',\r\n            },\r\n            {\r\n                value: 'Myanmar',\r\n                label: 'Myanmar',\r\n            },\r\n            {\r\n                value: 'Nepal',\r\n                label: 'Nepal',\r\n            },\r\n            {\r\n                value: 'North Korea',\r\n                label: 'North Korea',\r\n            },\r\n            {\r\n                value: 'Oman',\r\n                label: 'Oman',\r\n            },\r\n            {\r\n                value: 'Pakistan',\r\n                label: 'Pakistan',\r\n            },\r\n            {\r\n                value: 'Palestine',\r\n                label: 'Palestine',\r\n            },\r\n            {\r\n                value: 'Philippines',\r\n                label: 'Philippines',\r\n            },\r\n            {\r\n                value: 'Qatar',\r\n                label: 'Qatar',\r\n            },\r\n            {\r\n                value: 'Saudi Arabia',\r\n                label: 'Saudi Arabia',\r\n            },\r\n            {\r\n                value: 'Singapore',\r\n                label: 'Singapore',\r\n            },\r\n            {\r\n                value: 'South Korea',\r\n                label: 'South Korea',\r\n            },\r\n            {\r\n                value: 'Sri Lanka',\r\n                label: 'Sri Lanka',\r\n            },\r\n            {\r\n                value: 'Syria',\r\n                label: 'Syria',\r\n            },\r\n            {\r\n                value: 'Taiwan',\r\n                label: 'Taiwan',\r\n            },\r\n            {\r\n                value: 'Tajikistan',\r\n                label: 'Tajikistan',\r\n            },\r\n            {\r\n                value: 'Thailand',\r\n                label: 'Thailand',\r\n            },\r\n            {\r\n                value: 'Turkmenistan',\r\n                label: 'Turkmenistan',\r\n            },\r\n            {\r\n                value: 'United Arab Emirates',\r\n                label: 'United Arab Emirates',\r\n            },\r\n            {\r\n                value: 'Uzbekistan',\r\n                label: 'Uzbekistan',\r\n            },\r\n            {\r\n                value: 'Vietnam',\r\n                label: 'Vietnam',\r\n            },\r\n            {\r\n                value: 'Yemen',\r\n                label: 'Yemen',\r\n            },\r\n        ],\r\n        \r\n    },\r\n    {\r\n        value: 'Africa',\r\n        label: 'Africa',\r\n        children: [\r\n            {\r\n                value: 'Algeria',\r\n                label: 'Algeria',\r\n            },\r\n            {\r\n                value: 'Angola',\r\n                label: 'Angola',\r\n            },\r\n            {\r\n                value: 'Benin',\r\n                label: 'Benin',\r\n            },\r\n            {\r\n                value: 'Botswana',\r\n                label: 'Botswana',\r\n            },\r\n            {\r\n                value: 'Burkina Faso',\r\n                label: 'Burkina Faso',\r\n            },\r\n            {\r\n                value: 'Burundi',\r\n                label: 'Burundi',\r\n            },\r\n            {\r\n                value: 'Cameroon',\r\n                label: 'Cameroon',\r\n            },\r\n            {\r\n                value: 'Cape Verde',\r\n                label: 'Cape Verde',\r\n            },\r\n            {\r\n                value: 'Chad',\r\n                label: 'Chad',\r\n            },\r\n            {\r\n                value: 'Comoros',\r\n                label: 'Comoros',\r\n            },\r\n            {\r\n                value: 'Congo',\r\n                label: 'Congo',\r\n            },\r\n            {\r\n                value: 'Djibouti',\r\n                label: 'Djibouti',\r\n            },\r\n            {\r\n                value: 'Egypt',\r\n                label: 'Egypt',\r\n            },\r\n            {\r\n                value: 'Eritrea',\r\n                label: 'Eritrea',\r\n            },\r\n            {\r\n                value: 'Ethiopia',\r\n                label: 'Ethiopia',\r\n            },\r\n            {\r\n                value: 'Gambia',\r\n                label: 'Gambia',\r\n            },\r\n            {\r\n                value: 'Ghana',\r\n                label: 'Ghana',\r\n            },\r\n            {\r\n                value: 'Guinea',\r\n                label: 'Guinea',\r\n            },\r\n            {\r\n                value: 'Guinea Bissau',\r\n                label: 'Guinea Bissau',\r\n            },\r\n            {\r\n                value: 'Ivory Coast',\r\n                label: 'Ivory Coast',\r\n            },\r\n            {\r\n                value: 'Kenya',\r\n                label: 'Kenya',\r\n            },\r\n            {\r\n                value: 'Lesotho',\r\n                label: 'Lesotho',\r\n            },\r\n            {\r\n                value: 'Liberia',\r\n                label: 'Liberia',\r\n            },\r\n            {\r\n                value: 'Libya',\r\n                label: 'Libya',\r\n            },\r\n            {\r\n                value: 'Madagascar',\r\n                label: 'Madagascar',\r\n            },\r\n            {\r\n                value: 'Malawi',\r\n                label: 'Malawi',\r\n            },\r\n            {\r\n                value: 'Mali',\r\n                label: 'Mali',\r\n            },\r\n            {\r\n                value: 'Mauritania',\r\n                label: 'Mauritania',\r\n            },\r\n            {\r\n                value: 'Mauritius',\r\n                label: 'Mauritius',\r\n            },\r\n            {\r\n                value: 'Morocco',\r\n                label: 'Morocco',\r\n            },\r\n            {\r\n                value: 'Mozambique',\r\n                label: 'Mozambique',\r\n            },\r\n            {\r\n                value: 'Namibia',\r\n                label: 'Namibia',\r\n            },\r\n            {\r\n                value: 'Niger',\r\n                label: 'Niger',\r\n            },\r\n            {\r\n                value: 'Nigeria',\r\n                label: 'Nigeria',\r\n            },\r\n            {\r\n                value: 'Republic of the Congo',\r\n                label: 'Republic of the Congo',\r\n            },\r\n            {\r\n                value: 'Rwanda',\r\n                label: 'Rwanda',\r\n            },\r\n            {\r\n                value: 'Sao Tome and Principe',\r\n                label: 'Sao Tome and Principe',\r\n            },\r\n            {\r\n                value: 'Senegal',\r\n                label: 'Senegal',\r\n            },\r\n            {\r\n                value: 'Seychelles',\r\n                label: 'Seychelles',\r\n            },\r\n            {\r\n                value: 'Sierra Leone',\r\n                label: 'Sierra Leone',\r\n            },\r\n            {\r\n                value: 'Somalia',\r\n                label: 'Somalia',\r\n            },\r\n            {\r\n                value: 'South Africa',\r\n                label: 'South Africa',\r\n            },\r\n            {\r\n                value: 'South Sudan',\r\n                label: 'South Sudan',\r\n            },\r\n            {\r\n                value: 'Sudan',\r\n                label: 'Sudan',\r\n            },\r\n            {\r\n                value: 'Swaziland',\r\n                label: 'Swaziland',\r\n            },\r\n            {\r\n                value: 'Tanzania',\r\n                label: 'Tanzania',\r\n            },\r\n            {\r\n                value: 'Tunisia',\r\n                label: 'Tunisia',\r\n            },\r\n            {\r\n                value: 'Uganda',\r\n                label: 'Uganda',\r\n            },\r\n            {\r\n                value: 'Zambia',\r\n                label: 'Zambia',\r\n            },\r\n            {\r\n                value: 'Zimbabwe',\r\n                label: 'Zimbabwe',\r\n            },\r\n        ],\r\n        \r\n    },\r\n    {\r\n        value: 'Australia',\r\n        label: 'Australia',\r\n        children: [\r\n            {\r\n                value: 'Australia',\r\n                label: 'Australia',\r\n            },\r\n            {\r\n                value: 'Fiji',\r\n                label: 'Fiji',\r\n            },\r\n            {\r\n                value: 'New Caledonia',\r\n                label: 'New Caledonia',\r\n            },\r\n            {\r\n                value: 'New Zealand',\r\n                label: 'New Zealand',\r\n            },\r\n            {\r\n                value: 'Papua New Guinea',\r\n                label: 'Papua New Guinea',\r\n            },\r\n        ],\r\n        \r\n    },\r\n];","import React, {Component} from 'react';\r\nimport { Card, Pagination } from 'antd';\r\nimport {reqMembers} from '../../api';\r\nimport {PAGE_SIZE} from '../../utils/constants';\r\nimport {BASE_IMAGE_URL} from '../../utils/constants';\r\n\r\n\r\nconst { Meta } = Card;\r\nexport default class Members extends Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            minValue: 0,\r\n            maxValue: 3\r\n        };\r\n    }\r\n\r\n    state = {\r\n        total: 0,\r\n        members: [],\r\n    }\r\n\r\n    getMembers = async (pageNum) => {\r\n        this.pageNum = pageNum;\r\n        this.setState({loading: true});\r\n        const result = await reqMembers(pageNum, PAGE_SIZE);\r\n\r\n        this.setState({loading: false});\r\n        if (result.data.status===0) {\r\n            const {total, list} = result.data.data;\r\n            this.setState({\r\n                total,\r\n                members: list\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getMembers(1);\r\n    }\r\n\r\n    render () {\r\n\r\n        const { members, total } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {members && total>0 && members.slice(this.state.minValue, this.state.maxValue).map(member => (\r\n                    <Card\r\n                        hoverable\r\n                        style={{ width: 240 }}\r\n                        cover={<img alt=\"img\" src={BASE_IMAGE_URL + member.photo[0]} />}\r\n                        onClick={() => this.props.history.push('/member/details', {member})}\r\n                    >\r\n                        <Meta title={member.name} />\r\n                    </Card>\r\n                ))}\r\n                <Pagination\r\n                    defaultCurrent={1}\r\n                    defaultPageSize={3}\r\n                    onChange={this.getMembers}\r\n                    total={total}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Button, Card } from 'antd';\r\nimport {ArrowLeftOutlined} from '@ant-design/icons';\r\n//import {BASE_IMAGE_URL} from '../../utils/constants';\r\n\r\n\r\nexport default class Details extends Component {\r\n    render () {\r\n\r\n        // const {name, nickname, position, gender, dob, nationality, phone, address, photo=[], details} = this.props.location.state.member;\r\n\r\n        const {details} = this.props.location.state.member;\r\n\r\n        const title = (\r\n            <span>\r\n                <Button \r\n                type='link' \r\n                icon={<ArrowLeftOutlined style={{color: '#B49169', marginRight: 5, fontSize: 20}}/>}\r\n                onClick={() => this.props.history.goBack()}\r\n                >\r\n                </Button>\r\n                <span>Member details</span>\r\n            </span>\r\n        );\r\n        \r\n        return (\r\n            <Card title={title}>\r\n                {/* <span>\r\n                    {\r\n                        photo.map(img => (\r\n                            <img\r\n                                key={img}\r\n                                className=\"member-image\"\r\n                                src={BASE_IMAGE_URL + img}\r\n                                alt=\"img\"\r\n                            />\r\n                        ))\r\n                    }\r\n                </span> */}\r\n\r\n                <span dangerouslySetInnerHTML={{__html: details}}></span>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nimport Members from './index';\r\nimport Details from './details';\r\n\r\n\r\n\r\nexport default class Member extends Component {\r\n    render () {\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/member' component={Members}/>\r\n                <Route path='/member/details' component={Details}/>\r\n                <Redirect to='/member'/>\r\n            </Switch>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Card, Input, Button, Table, Space, Select, Popconfirm, message } from 'antd';\r\nimport { PlusOutlined, SearchOutlined } from '@ant-design/icons';\r\n\r\nimport {reqDeleteMember, reqMembers, reqSearchMembers} from '../../api';\r\nimport {PAGE_SIZE} from '../../utils/constants';\r\n\r\nconst Option = Select.Option;\r\nexport default class MembersList extends Component {\r\n\r\n    state = {\r\n        total: 0, // Number of members\r\n        members: [\r\n            // {\r\n            //     name: 'Yuanhao Li',\r\n            //     nickname: 'Xiaohu',\r\n            //     position: 'Player',\r\n            //     gender: 'Male',\r\n            //     dob: '1998-01-28',\r\n            //     nationality: 'China',\r\n            //     phone: '',\r\n            //     address: 'Shanghai',\r\n            //     photo: [\"image-1615697506989.jpg\"],\r\n            //     _id: \"safff1f11f1f1\"\r\n            // }\r\n        ],\r\n        loading: false,\r\n        searchName: '',\r\n        searchType: 'memberName',\r\n    }\r\n\r\n    // Initialize the array of the table columns\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n              title: 'Name',\r\n              dataIndex: 'name',\r\n            },\r\n            {\r\n              title: 'Nickname',\r\n              dataIndex: 'nickname',\r\n            },\r\n            {\r\n              title: 'Position',\r\n              dataIndex: 'position',\r\n            },\r\n            \r\n            {\r\n              width: 200,\r\n              align: 'center',\r\n              title: 'Action',\r\n              render: (member) => (\r\n                <Space>\r\n                    <Button type='link' onClick={() => this.props.history.push('/management/member/details', {member})}>Details</Button>\r\n                    <Button type='link' onClick={() => member ? this.props.history.push('/management/member/operations?member=' + JSON.stringify(member)) : this.props.history.push('/management/member/operations')}>Edit</Button>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this member?\"\r\n                        onConfirm={async() => {\r\n                            const result = await reqDeleteMember(member);\r\n                            if (result.data.status===0) {\r\n                                message.success('Successfully deleted the member!');\r\n                            } else {\r\n                                message.error('Failed to delete the member.');\r\n                            }\r\n                            this.getMembers(1);\r\n                        }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button \r\n                            type='link' \r\n                            style={{color: \"red\"}} \r\n                            // onClick={() => {\r\n                            //     //console.log(member)\r\n                            //     //console.log(member._id)\r\n                            //     reqDeleteMember(member)\r\n                            //     this.getMembers(1)\r\n                            // }}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n              ),\r\n            },\r\n          ];\r\n    }\r\n\r\n    // Get the list of specified page number\r\n    getMembers = async (pageNum) => {\r\n        this.pageNum = pageNum;\r\n        this.setState({loading: true});\r\n        const {searchName, searchType} = this.state;\r\n        let result;\r\n        if (searchName) {\r\n            result = await reqSearchMembers({pageNum, pageSize: PAGE_SIZE, searchName, searchType});\r\n            // console.log(searchName)\r\n            // console.log(searchType)\r\n            // console.log(searchType==='memberName')\r\n            // console.log(result)\r\n        } else {\r\n            result = await reqMembers(pageNum, PAGE_SIZE);\r\n            //console.log(result)\r\n        }\r\n        this.setState({loading: false});\r\n        //console.log(result.status)\r\n        //console.log(result.data)\r\n        //console.log(result.data.data)\r\n        //console.log(result.data.data.list)  \r\n        if (result.data.status===0) {\r\n            const {total, list} = result.data.data;\r\n            this.setState({\r\n                total,\r\n                members: list\r\n            });\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.initColumns();\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getMembers(1); // the 1st page\r\n    }\r\n\r\n    render () {\r\n\r\n        const { members, total, loading, searchName, searchType } = this.state;\r\n\r\n        const title = (\r\n            <span>\r\n                <Select \r\n                value={searchType} \r\n                style={{width: 200}} \r\n                onChange={value => this.setState({searchType:value})}\r\n                >\r\n                    <Option value='memberName'>Search by Name</Option>\r\n                    <Option value='memberNickname'>Search by Nickname</Option>\r\n                    <Option value='memberPosition'>Search by Postion</Option>\r\n                </Select>\r\n                <Input \r\n                placeholder='keyword' \r\n                prefix={<SearchOutlined />} \r\n                style={{width: 100, margin: '0 10px'}} \r\n                value={searchName}\r\n                onChange={event => this.setState({searchName:event.target.value})}\r\n                />\r\n                <Button type='primary' onClick={() => this.getMembers(1)}>Search</Button>\r\n            </span>\r\n        );\r\n        \r\n        const extra = (\r\n            <Button type='primary' icon={<PlusOutlined />} onClick={() => this.props.history.push('/management/member/operations')}>\r\n                New Member\r\n            </Button>\r\n        );\r\n\r\n        return (\r\n            <Card title={title} extra={extra}>\r\n                <Table \r\n                    columns={this.columns}\r\n                    dataSource={members}\r\n                    rowKey='_id'\r\n                    bordered\r\n                    pagination={{\r\n                        current: this.pageNum,\r\n                        defaultPageSize: PAGE_SIZE, \r\n                        showQuickJumper: true, \r\n                        total,\r\n                        onChange: this.getMembers\r\n                    }}\r\n                    loading={loading}\r\n                ></Table>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Upload, Modal, message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport {reqDeleteImg} from '../../api'\r\nimport PropTypes from 'prop-types';\r\nimport { BASE_IMAGE_URL } from '../../utils/constants';\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default class PicturesWall extends React.Component {\r\n\r\n  static propTypes = {\r\n    photo: PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    previewTitle: '',\r\n    fileList: [],\r\n  };\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    let fileList = [];\r\n\r\n    // If the photo attribute is passed in\r\n    const {photo} = this.props;\r\n    if (photo && photo.length>0) {\r\n      fileList = photo.map((img, index) => ({\r\n        uid: -index,\r\n        name: img,\r\n        status: 'done',\r\n        url: BASE_IMAGE_URL + img\r\n      }));\r\n    }\r\n\r\n    this.state = {\r\n      previewVisible: false,\r\n      previewImage: '',\r\n      fileList\r\n    }\r\n  }\r\n\r\n  // Get the array of names of all the uploaded images\r\n  getImages = () => {\r\n    return this.state.fileList.map(file => file.name);\r\n  }\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  // file: Image files for the current operation\r\n  // fileList: An array of all uploaded image file objects\r\n  handleChange = async ({ file, fileList }) => {\r\n    if (file.status==='done') {\r\n      const result = file.response;\r\n      if (result.status===0) {\r\n        message.success(\"Successfully uploaded the image!\");\r\n        const {name, url} = result.data;\r\n        file = fileList[fileList.length-1];\r\n        file.name = name;\r\n        file.url = url;\r\n      } else {\r\n        message.error(\"Failed to upload image.\");\r\n      }\r\n    } else if (file.status==='removed') {\r\n      const result = await reqDeleteImg(file.name);\r\n      if (result.data.status===0) {\r\n        message.success(\"Successfully deleted the image!\");\r\n      } else {\r\n        message.error(\"Failed to detele the image.\");\r\n      }\r\n    }\r\n\r\n    this.setState({ fileList });\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList, previewTitle } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined />\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <>\r\n        <Upload\r\n          action=\"/management/member/image/upload\" // The address of the uploaded images\r\n          accept=\"image/*\" // Only accept image files\r\n          name=\"image\" // Parameter name of request\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class RichTextEditor extends Component {\r\n\r\n    static propTypes = {\r\n        details: PropTypes.string\r\n    }\r\n\r\n    state = {\r\n        editorState: EditorState.createEmpty(), // Create a non-content editing object\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const html = this.props.details;\r\n        if (html) { // If it has a value, create a corresponding edit object based on an html format string\r\n            const contentBlock = htmlToDraft(html);\r\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            const editorState = EditorState.createWithContent(contentState);\r\n            this.state = {\r\n                editorState,\r\n            };\r\n        } else {\r\n            this.state = {\r\n                editorState: EditorState.createEmpty(), // Create a non-content editing object\r\n            }\r\n        }\r\n    }\r\n\r\n    // Real-time callbacks during input\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n        editorState,\r\n        });\r\n    };\r\n\r\n    getDetails = () => {\r\n        return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()));\r\n    }\r\n        /* <textarea\r\n            disabled\r\n            value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n    /> */\r\n\r\n    uploadImageCallBack = (file) => {\r\n        return new Promise(\r\n          (resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open('POST', '/management/member/image/upload');\r\n            const data = new FormData();\r\n            data.append('image', file);\r\n            xhr.send(data);\r\n            xhr.addEventListener('load', () => {\r\n              const response = JSON.parse(xhr.responseText);\r\n              const url = response.data.url; // Get the url of the image\r\n              resolve({data: {link: url}});\r\n            });\r\n            xhr.addEventListener('error', () => {\r\n              const error = JSON.parse(xhr.responseText);\r\n              reject(error);\r\n            });\r\n          }\r\n        );\r\n      }\r\n\r\n    render() {\r\n        const { editorState } = this.state;\r\n        return (\r\n        \r\n            <Editor\r\n            editorState={editorState}\r\n            editorStyle={{border: '1px solid black', minHeight: 200, paddingLeft: 10}}\r\n            onEditorStateChange={this.onEditorStateChange}\r\n            toolbar={{\r\n                image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n            }}\r\n            />\r\n\r\n        );\r\n    }\r\n}","import React, { useRef } from 'react';\r\nimport { Card, Form, Input, Button, Radio, DatePicker, message, Cascader } from 'antd';\r\nimport PicturesWall from './picturesWall';\r\nimport {ArrowLeftOutlined} from '@ant-design/icons';\r\nimport {useHistory} from 'react-router-dom';\r\nimport getQuery from '../../utils/urlUtils';\r\nimport moment from 'moment';\r\nimport RichTextEditor from './rich-text-editor';\r\nimport {reqAddOrUpdateMember} from '../../api';\r\nimport {nationalityList} from '../../utils/constants';\r\n\r\nconst {Item} = Form;\r\nconst Operations = () => {\r\n\r\n    const options = nationalityList;\r\n\r\n    function displayRender(label) {\r\n        return label[label.length - 1];\r\n    }\r\n\r\n    // Specify the configuration object for the Item layout\r\n    const formItemLayout = {\r\n        labelCol: { span: 3 },\r\n        wrapperCol: { span: 8 }\r\n    }\r\n\r\n    let history = useHistory();\r\n    const [form] = Form.useForm();\r\n    \r\n    // eslint-disable-next-line no-unused-vars\r\n    const [value, setValue] = React.useState(1);\r\n    const onChange = e => {\r\n        //console.log('radio checked', e.target.value);\r\n        setValue(e.target.value);\r\n    };\r\n    \r\n    const pw = useRef();\r\n    if(!pw.current){\r\n        pw.current = value;\r\n    }\r\n\r\n    const editor = useRef();\r\n    if (!editor.current) {\r\n        editor.current = value;\r\n    }\r\n    \r\n    const member_ = getQuery('member');\r\n    const isUpdate = !!member_;\r\n    let member;\r\n    let _id;\r\n    if (isUpdate) {\r\n        member = JSON.parse(member_);\r\n        _id = member._id;\r\n    } else {\r\n        member = {};\r\n    }\r\n    const {photo} = member;\r\n    const {details} = member;\r\n    \r\n    const onFinish = values => {\r\n        form.validateFields()\r\n            .then(async values => {\r\n\r\n                //console.log(values)\r\n                // 1. Collect data and encapsulate it into a member object\r\n                const {name, nickname, position, gender, nationality, phone, address} = values;\r\n                let {dob} = values;\r\n                dob = moment(dob).format('YYYY-MM-DD');\r\n                //const dob = moment(moment_dob).format('YYYY-MM-DD');\r\n                //console.log(gender)\r\n                //console.log(dob)\r\n                const photo = pw.current.getImages();\r\n                const details = editor.current.getDetails();\r\n                const member = {name, nickname, position, gender, dob, nationality, phone, address, photo, details}\r\n                //console.log(member)\r\n                //console.log(isUpdate)\r\n\r\n                // If it's update, it needs to add the _id\r\n                if (isUpdate) {\r\n                    member._id = _id;\r\n                }\r\n\r\n                // 2. Invoke the interface request function to add/update\r\n                const result = await reqAddOrUpdateMember(member);\r\n                //console.log(result.status)\r\n\r\n                // 3. Give a hint based on the result\r\n                if (result.data.status===0) {\r\n                    message.success(`Successfully ${isUpdate ? 'updated' : 'added'} the member!`);\r\n                    history.goBack();\r\n                } else {\r\n                    message.error(`Failed to ${isUpdate ? 'update' : 'add'} the member.`);\r\n                }\r\n\r\n               //console.log(\"photos and details\", photo, details)\r\n            })\r\n            .catch(errorInfo => {  \r\n                console.log(errorInfo);\r\n            });\r\n    }\r\n\r\n    const title = (\r\n        <span>\r\n            <Button \r\n            type='link' \r\n            icon={<ArrowLeftOutlined style={{color: '#B49169', marginRight: 5, fontSize: 20}}/>}\r\n            onClick={() => history.goBack()}\r\n            >\r\n            </Button>\r\n            <span>{isUpdate ? \"Edit Member\" : \"Add New Member\"}</span>\r\n        </span>\r\n    );\r\n    \r\n    return (\r\n        <Card title={title}>\r\n            <Form {...formItemLayout} onFinish={onFinish} form={form}>\r\n                <Item label=\"Name\" initialValue={member.name} name='name' rules={[{required: true, message: 'Name must be entered!'}]}>\r\n                    <Input placeholder='Please input the name'/>\r\n                </Item>\r\n                <Item label=\"Nickname\" initialValue={member.nickname} name='nickname' rules={[{required: true, message: 'Nickname must be entered!'}]}>\r\n                    <Input placeholder='Please input the niclkname'/>\r\n                </Item>\r\n                <Item label=\"Position\" initialValue={member.position} name='position' rules={[{required: true, message: 'Position must be entered!'}]}>\r\n                    <Input placeholder='Please input the position'/>\r\n                </Item>\r\n                <Item label=\"Gender\" initialValue={member.gender} name='gender'>\r\n                    <Radio.Group name=\"radiogroup\" onChange={onChange} value={value}>\r\n                        <Radio value=\"Male\">Male</Radio>\r\n                        <Radio value=\"Female\">Female</Radio>\r\n                        <Radio value=\"Intersex\">Intersex</Radio>\r\n                    </Radio.Group>\r\n                </Item>\r\n                <Item label=\"DoB\" initialValue={moment(member.dob)} name='dob'>\r\n                    <DatePicker />\r\n                </Item>\r\n                <Item label=\"Nationality\" initialValue={member.nationality} name='nationality'>\r\n                    {/* <Input placeholder='Please input the nationality'/> */}\r\n                    <Cascader \r\n                        options={options} \r\n                        placeholder=\"Please select the nationality.\" \r\n                        expandTrigger=\"hover\"\r\n                        displayRender={displayRender}\r\n                    />\r\n                </Item>\r\n                <Item label=\"Phone No.\" initialValue={member.phone} name='phone'>\r\n                    <Input placeholder='Please input the phone number'/>\r\n                </Item>\r\n                <Item label=\"Address\" initialValue={member.address} name='address'>\r\n                    <Input placeholder='Please input the address'/>\r\n                </Item>\r\n                <Item label=\"Photo\" >\r\n                    <PicturesWall ref={pw} photo={photo} />\r\n                </Item>\r\n                <Item label=\"Details\" labelCol={{span: 3}} wrapperCol={{span:20}}>\r\n                    <RichTextEditor ref={editor} details={details} />\r\n                </Item>\r\n                <Item>\r\n                    <Button type='primary' htmlType='submit'>Submit</Button>\r\n                </Item>\r\n            </Form>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Operations;","export default function getQuery(name) {\r\n    \r\n    let reg = new RegExp(\"(^|&)\"+ name +\"=([^&]*)(&|$)\");\r\n    let r = window.location.search.substr(1).match(reg);//substr() 的参数指定的\r\n    if(r != null) {\r\n        return unescape(r[2]); \r\n    }\r\n        return null;\r\n  }\r\n  ","import React, {Component} from 'react';\r\nimport { Card, List, Button } from 'antd';\r\nimport {ArrowLeftOutlined} from '@ant-design/icons';\r\nimport {BASE_IMAGE_URL} from '../../utils/constants';\r\n\r\nconst Item = List.Item;\r\n\r\nexport default class Details extends Component {\r\n    render () {\r\n\r\n        const {name, nickname, position, gender, dob, nationality=[], phone, address, photo=[], details} = this.props.location.state.member;\r\n\r\n        const title = (\r\n            <span>\r\n                <Button \r\n                type='link' \r\n                icon={<ArrowLeftOutlined style={{color: '#B49169', marginRight: 5, fontSize: 20}}/>}\r\n                onClick={() => this.props.history.goBack()}\r\n                >\r\n                </Button>\r\n                <span>Member details</span>\r\n            </span>\r\n        );\r\n\r\n        return (\r\n            <Card title={title} className='member-details'>\r\n                <List>\r\n                    <Item>\r\n                        <span className=\"left\">Name:</span>\r\n                        <span>{name}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">Nickname:</span>\r\n                        <span>{nickname}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">Position:</span>\r\n                        <span>{position}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">Gender:</span>\r\n                        <span>{gender}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">DoB:</span>\r\n                        <span>{dob}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">Nationality:</span>\r\n                        <span>{nationality.slice(-1)}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">Phone No.:</span>\r\n                        <span>{phone}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">Address:</span>\r\n                        <span>{address}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">Photo:</span>\r\n                        <span>\r\n                            {\r\n                                photo.map(img => (\r\n                                    <img\r\n                                        key={img}\r\n                                        className=\"member-image\"\r\n                                        src={BASE_IMAGE_URL + img}\r\n                                        alt=\"img\"\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">Details:</span>\r\n                        <span dangerouslySetInnerHTML={{__html: details}}></span>\r\n                    </Item>\r\n                </List>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nimport MembersList from './index';\r\nimport Operations from './operations';\r\nimport Details from './details';\r\n\r\nimport './memberManagement.less';\r\n\r\n\r\nexport default class MemberManagement extends Component {\r\n    render () {\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/management/member' component={MembersList}/>\r\n                <Route path='/management/member/operations' component={Operations}/>\r\n                <Route path='/management/member/details' component={Details}/>    \r\n                <Redirect to='/management/member'/>\r\n            </Switch>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst {Item} = Form;\r\n\r\nexport default class AddForm extends Component {\r\n\r\n    formRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        setForm: PropTypes.func.isRequired,\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.props.setForm(this.formRef);\r\n    }\r\n\r\n    render() {\r\n\r\n        const formItemLayout = {\r\n        labelCol: { span: 4 },  \r\n        wrapperCol: { span: 15 }, \r\n        }\r\n\r\n        return (\r\n            <Form ref={this.formRef}>\r\n                <Item \r\n                    label='Role Name' \r\n                    name='roleName'\r\n                    {...formItemLayout} \r\n                    initialValue='' \r\n                    rules={[{\r\n                        required: true, \r\n                        message: 'Role name must be entered!'\r\n                    }]}\r\n                >\r\n                    <Input placeholder='Please input the role name.' />\r\n                </Item>\r\n            </Form>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input, Tree } from 'antd';\r\nimport menuList from '../../config/menuConfig';\r\n\r\nconst {Item} = Form;\r\nconst {TreeNode} = Tree;\r\n\r\nexport default class Auth extends Component {\r\n\r\n    formRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        role: PropTypes.object\r\n    }\r\n\r\n    // Generate the initial state according to the role passed in\r\n    constructor (props) {\r\n        super(props);\r\n        const {menus} = this.props.role;\r\n        this.state = {\r\n            checkedKeys: menus\r\n        }\r\n    }\r\n\r\n    // Provide a function for parent component to get the latest [menus]\r\n    getMenus = () => this.state.checkedKeys;\r\n\r\n    getTreeNodes = (menuList) => {\r\n        return menuList.reduce((pre, item) => {\r\n            pre.push(\r\n                <TreeNode title={item.title} key={item.route}>\r\n                    {item.children ? this.getTreeNodes(item.children) : null}\r\n                </TreeNode>\r\n            );\r\n            return pre;\r\n        }, []);\r\n    }\r\n\r\n    onCheck = checkedKeys => {\r\n        console.log('onCheck', checkedKeys);\r\n        this.setState({checkedKeys});\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.treeNodes = this.getTreeNodes(menuList);\r\n    }\r\n\r\n    // Update the state of \"checkedKeys\" according to the newly passed in role\r\n    // Invoke automatically when the component receives new attributes\r\n    UNSAFE_componentWillReceiveProps (nextProps) {\r\n        const menus = nextProps.role.menus;\r\n        this.setState({\r\n            checkedKeys: menus\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {role} = this.props;\r\n        const {checkedKeys} = this.state;\r\n\r\n        const formItemLayout = {\r\n        labelCol: { span: 4 },  \r\n        wrapperCol: { span: 15 }, \r\n        }\r\n\r\n        return (\r\n            <Form>\r\n                <Item label='Role Name' {...formItemLayout}>\r\n                    <Input value={role.name} disabled />\r\n                </Item>\r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll={true}\r\n                    checkedKeys={checkedKeys}\r\n                    onCheck={this.onCheck}\r\n                >\r\n                    <TreeNode title='System Permissions' key='0-0'>\r\n                        {this.treeNodes}\r\n                    </TreeNode>\r\n                </Tree>\r\n            </Form>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Card, Button, Table, Modal, message, Popconfirm } from 'antd';\r\nimport {PAGE_SIZE} from '../../utils/constants';\r\nimport { reqRoles, reqAddRole, reqSetRolePermissions, reqDeleteRole} from '../../api';\r\nimport AddForm from './add-form';\r\nimport AuthForm from './auth-form';\r\nimport memoryUtils from '../../utils/memoryUtils';\r\nimport storageUtils from '../../utils/storageUtils';\r\nimport {formatDate} from '../../utils/dateUtils';\r\n\r\nexport default class RoleManagement extends Component {\r\n\r\n    state = {\r\n        roles: [], // The list of all roles\r\n        role: {}, // The selected role\r\n        isShownAdd: false, // Display the adding interface or not\r\n        isShownAuth: false, //Display the permission setting interface or not\r\n        loading: false\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.auth = React.createRef();\r\n    }\r\n\r\n    initColumn = () => {\r\n        this.columns = [\r\n            {\r\n                title: 'Role Name',\r\n                dataIndex: 'name'\r\n            },\r\n            {\r\n                title: 'Create Time',\r\n                dataIndex: 'create_time',\r\n                render: formatDate\r\n            },\r\n            {\r\n                title: 'Authorization Time',\r\n                dataIndex: 'auth_time',\r\n                render: formatDate\r\n            },\r\n            {\r\n                title: 'Operator',\r\n                dataIndex: 'auth_name'\r\n            }\r\n        ];\r\n    }\r\n\r\n    getRoles = async () => {\r\n        this.setState({loading: true});\r\n        const result = await reqRoles();\r\n        this.setState({loading: false});\r\n        if (result.data.status===0) {\r\n            const roles = result.data.data;\r\n            this.setState({\r\n                roles\r\n            });\r\n        }\r\n    }\r\n\r\n    onRow = (role) => {\r\n        return {\r\n            onClick: event => {\r\n                //console.log('row onClick', role)\r\n                this.setState({\r\n                    role\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    addRole = () => {\r\n        // Validate the form\r\n        this.form.current.validateFields()\r\n            .then( async values => {\r\n\r\n                this.setState({\r\n                    isShownAdd: false\r\n                });\r\n\r\n                // Collect input data\r\n                const {roleName} = values;\r\n                this.form.current.resetFields();\r\n\r\n                // Request add new role\r\n                const result = await reqAddRole(roleName);\r\n\r\n                // Give a hint based on the result\r\n                if (result.data.status===0) {\r\n                    message.success('Successfully added the role!');\r\n                    this.getRoles();\r\n                    const role = result.data.data;\r\n                    // const roles = [...this.state.roles];\r\n                    // roles.push(role);\r\n                    // this.setState({\r\n                    //     roles\r\n                    // });\r\n                    this.setState(state => ({\r\n                        roles: [...state.roles, role]                        \r\n                    }));\r\n                } else {\r\n                    message.error('Failed to add new role');\r\n                }\r\n            })\r\n            .catch();\r\n\r\n\r\n    }\r\n\r\n    setRolePermissons = async () => {\r\n\r\n        this.setState({\r\n            isShownAuth: false\r\n        });\r\n\r\n        const role = this.state.role;\r\n        const menus = this.auth.current.getMenus();\r\n        role.menus = menus;\r\n        role.auth_time = Date.now();\r\n        role.auth_name = memoryUtils.user.username;\r\n\r\n        const result = await reqSetRolePermissions(role);\r\n        if (result.data.status===0) {\r\n            \r\n            //this.getRoles();\r\n            // If the permissions currently updated is one's own role's, then force quit\r\n            if (role._id===memoryUtils.user.role_id) {\r\n                memoryUtils.user = {};\r\n                storageUtils.removeUser();\r\n                this.props.history.replace('/login');\r\n                message.info('The permissions of current user has changed. Please login again.');\r\n            } else {\r\n                message.success('Successfully set the role permissions!');\r\n                this.setState({\r\n                    role: [...this.state.roles]\r\n                });\r\n            }\r\n        } else {\r\n            message.error('Failed to set the role permissions.');\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.initColumn();\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getRoles();\r\n    }\r\n\r\n    render () {\r\n\r\n        const {roles, role, isShownAdd, isShownAuth, loading} = this.state;\r\n\r\n        const title = (\r\n            <span>\r\n                <Button type='primary' onClick={() => this.setState({isShownAdd: true})}>Create Role</Button> &nbsp;&nbsp;\r\n                <Button type='primary' disabled={!role._id} onClick={() => this.setState({isShownAuth: true})}>Set Role Permissons</Button>&nbsp;&nbsp;\r\n                <Popconfirm\r\n                        title=\"Are you sure to delete this role?\"\r\n                        onConfirm={async() => {\r\n                            const result = await reqDeleteRole(role);\r\n                            if (result.data.status===0) {\r\n                                message.success('Successfully deleted the role!');\r\n                            } else {\r\n                                message.error('Failed to delete the role.');\r\n                            }\r\n                            this.getRoles();\r\n                        }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type='danger' disabled={!role._id}>\r\n                            Delete\r\n                        </Button>\r\n                    </Popconfirm>\r\n                \r\n            </span>\r\n        );\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    columns={this.columns}\r\n                    rowKey='_id'\r\n                    bordered\r\n                    pagination={{\r\n                        defaultPageSize: PAGE_SIZE, \r\n                        showQuickJumper: true, \r\n                    }}\r\n                    dataSource={roles}\r\n                    rowSelection={{\r\n                        type: 'radio', \r\n                        selectedRowKeys: [role._id],\r\n                        onSelect: (role) => {\r\n                            this.setState({\r\n                                role\r\n                            });\r\n                        }\r\n                    }}\r\n                    onRow={this.onRow}\r\n                    loading={loading}\r\n                >\r\n                </Table>\r\n\r\n                <Modal\r\n                    title='Add New Role'\r\n                    visible={isShownAdd}\r\n                    onOk={this.addRole}\r\n                    onCancel={() => {\r\n                        this.setState({\r\n                            isShownAdd: false\r\n                        });\r\n                        this.form.current.resetFields();\r\n                    }}\r\n                >\r\n                    <AddForm\r\n                        setForm={(form) => this.form = form}\r\n                    />\r\n                </Modal>      \r\n\r\n                <Modal\r\n                    title='Set Role Permissions'\r\n                    visible={isShownAuth}\r\n                    onOk={this.setRolePermissons}\r\n                    onCancel={() => {\r\n                        this.setState({\r\n                            isShownAuth: false\r\n                        });\r\n                    }}\r\n                >\r\n                    <AuthForm\r\n                        role={role}\r\n                        ref={this.auth}\r\n                    />\r\n                </Modal>  \r\n\r\n            </Card>\r\n        );\r\n    }\r\n}","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input, Select } from 'antd';\r\n\r\nconst {Item} = Form;\r\nconst Option = Select.Option;\r\n\r\nexport default class UserForm extends PureComponent {\r\n\r\n    formRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        setForm: PropTypes.func.isRequired,\r\n        roles: PropTypes.array.isRequired,\r\n        user: PropTypes.object,\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.props.setForm(this.formRef);\r\n    }\r\n\r\n    render() {\r\n\r\n        const formItemLayout = {\r\n        labelCol: { span: 4 },  \r\n        wrapperCol: { span: 15 }, \r\n        }\r\n\r\n        const {roles, user} = this.props;\r\n\r\n        return (\r\n            <Form ref={this.formRef} {...formItemLayout} >\r\n                <Item \r\n                    label='Username' \r\n                    name='username'\r\n                    initialValue={user.username} \r\n                    rules={[{\r\n                        required: true, \r\n                        message: 'Username must be entered!'\r\n                    }]}\r\n                >\r\n                    <Input placeholder='Please input the username.' />\r\n                </Item>\r\n                {\r\n                    user._id ? null : (\r\n                        <Item \r\n                            label='Password' \r\n                            name='password'\r\n                            initialValue={user.password} \r\n                            rules={[{\r\n                                required: true, \r\n                                message: 'Password must be entered!'\r\n                            }]}\r\n                        >\r\n                            <Input type='password' placeholder='Please input the password.' />\r\n                        </Item>\r\n                    )\r\n                }\r\n                <Item \r\n                    label='Role' \r\n                    name='role_id'\r\n                    initialValue={user.role_id}\r\n                >\r\n                    <Select>\r\n                        {\r\n                            roles.map(role => <Option key={role._id}>{role.name}</Option>)\r\n                        }\r\n                    </Select>\r\n                </Item>\r\n                <Item \r\n                    label='Notes' \r\n                    name='notes'\r\n                    initialValue={user.notes}\r\n                >\r\n                    <Input placeholder='Please input the notes.' />\r\n                </Item>\r\n            </Form>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Card, Button, Table, Modal, message } from 'antd';\r\nimport {PAGE_SIZE} from '../../utils/constants';\r\nimport {formatDate} from '../../utils/dateUtils';\r\nimport { reqAddOrUpdateUser, reqDeleteUser, reqUsers } from '../../api';\r\nimport UserForm from './user-form';\r\n\r\nexport default class UserManagement extends Component {\r\n\r\n    state = {\r\n        users: [], // List of all users\r\n        roles: [], // List of all roles\r\n        isShown: false, // Display the interface or not\r\n        loading: false\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: 'Username',\r\n                dataIndex: 'username'\r\n            },\r\n            {\r\n                title: 'Register Time',\r\n                dataIndex: 'create_time',\r\n                render: formatDate\r\n            },\r\n            {\r\n                title: 'Role',\r\n                dataIndex: 'role_id',\r\n                render: (role_id) => this.roleNames[role_id]\r\n            },\r\n            {\r\n                title: 'Notes',\r\n                dataIndex: 'notes'\r\n            },\r\n            {\r\n                title: 'Action',\r\n                render: (user) => (\r\n                    <span>\r\n                        <Button \r\n                        type='link' \r\n                        onClick={() => {\r\n                            this.user = user;\r\n                            this.setState({\r\n                                isShown: true\r\n                            });\r\n                        }}\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n                        <Button \r\n                            type='link' \r\n                            style={{color: \"red\"}}\r\n                            onClick={() => this.deleteUser(user)}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n    }\r\n\r\n    // Generate the object including all the roles according to the array 'role' (use value of role's id as attribute name)\r\n    initRoleNames = (roles) => {\r\n        const roleNames = roles.reduce((pre, role) => {\r\n            pre[role._id] = role.name;\r\n            return pre;\r\n        }, {});\r\n        this.roleNames = roleNames;\r\n    }\r\n\r\n    addOrUpdateUser = async () => {\r\n\r\n        this.setState({isShown: false});\r\n\r\n        // Collect input data\r\n        const user = this.form.current.getFieldsValue();\r\n        this.form.current.resetFields();\r\n\r\n        // If it is update, declare the _id for user\r\n        if (this.user) {\r\n            user._id = this.user._id;\r\n        }\r\n\r\n        // Commit the add request\r\n        const result = await reqAddOrUpdateUser(user);\r\n        if (result.data.status===0) {\r\n            message.success(`Successfully ${this.user ? 'updated' : 'added'} the user!`);\r\n            this.getUsers();\r\n        } else {\r\n            message.error('Failed to add the user.');\r\n        }\r\n\r\n        // Update the list\r\n    }\r\n\r\n    getUsers = async () => {\r\n        this.setState({loading: true});\r\n        const result = await reqUsers();\r\n        this.setState({loading: false});\r\n        if (result.data.status===0) {\r\n            const {users, roles} = result.data.data;\r\n            this.initRoleNames(roles);\r\n            this.setState({\r\n                users,\r\n                roles\r\n            });\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    deleteUser = (user) => {\r\n        Modal.confirm({\r\n            title: `Are you sure to delete ${user.username}?`,\r\n            onOk: async () => {\r\n                const result = await reqDeleteUser(user._id);\r\n                if (result.data.status===0) {\r\n                    message.success(\"Successfully deleted the user!\");\r\n                    this.getUsers();\r\n                } else {\r\n                    message.error(\"Failed to delete the user\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.initColumns();\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getUsers();\r\n    }\r\n\r\n    render () {\r\n\r\n        const {users, roles, isShown, loading} = this.state;\r\n        const user = this.user || {};\r\n\r\n        const title = <Button type='primary' onClick={() => {\r\n            this.user = null;\r\n            this.setState({isShown: true});\r\n        }}>Create User</Button>;\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    columns={this.columns}\r\n                    rowKey='_id'\r\n                    bordered\r\n                    pagination={{\r\n                        defaultPageSize: PAGE_SIZE, \r\n                        showQuickJumper: true, \r\n                    }}\r\n                    dataSource={users}\r\n                    loading={loading}\r\n                >\r\n                </Table>\r\n\r\n                <Modal\r\n                    title={user._id ? 'Update User' : 'Create User'}\r\n                    visible={isShown}\r\n                    onOk={this.addOrUpdateUser}\r\n                    onCancel={() => {\r\n                        this.form.current.resetFields();\r\n                        this.setState({isShown: false});\r\n                        this.user = null;\r\n                    }}\r\n                    destroyOnClose\r\n                >\r\n                    <UserForm \r\n                        setForm={form => this.form = form}\r\n                        roles={roles}\r\n                        user={user}\r\n                    />\r\n                </Modal>      \r\n            </Card>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport memoryUtils from '../../utils/memoryUtils';\r\nimport { Layout } from 'antd';\r\nimport LeftNav from '../../components/left-nav';\r\nimport Header from '../../components/header';\r\nimport Home from '../home/home';\r\nimport Calendar from '../calendar/calendar';\r\nimport Member from '../member/member';\r\nimport MemberManagement from '../memberManagement/memberManagement';\r\nimport RoleManagement from '../roleManagement/roleManagement';\r\nimport UserManagement from '../userManagement/userManagement';\r\n\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\nexport default class Admin extends Component {\r\n    render () {\r\n\r\n        const user = memoryUtils.user;\r\n        // No user is stored in memory, which means not logged in\r\n        if (!user || !user._id) {\r\n            // Automatically jump to the login screen\r\n            return <Redirect to='/login'/>\r\n        }\r\n\r\n        return (\r\n            <Layout style={{minHeight:'100%'}}>\r\n                <Sider style={{zIndex: 9999}}>\r\n                    <LeftNav/>\r\n                </Sider>\r\n                <Layout style={{minWidth: 1000}}>\r\n                    <Header>Header</Header>\r\n                    <Content style={{margin: 20, backgroundColor: '#ffffff'}}>\r\n                        <Switch>\r\n                            <Route path='/home' component={Home}/>\r\n                            <Route path='/calendar' component={Calendar}/>\r\n                            <Route path='/member' component={Member}/>\r\n                            <Route path='/management/member' component={MemberManagement}/>\r\n                            <Route path='/management/user' component={UserManagement}/>\r\n                            <Route path='/management/role' component={RoleManagement}/>\r\n                            <Redirect to='/home'/>\r\n                        </Switch>\r\n                    </Content>\r\n                    <Footer style={{textAlign: 'center'}}>Royal Never Give Up</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\n//import { Button, message } from \"antd\";\r\nimport './App.less';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Login from './pages/login/login';\r\nimport Admin from './pages/admin/admin';\r\n\r\nexport default class App extends Component{\r\n\r\n  render () {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route> \r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport memoryUtils from '../src/utils/memoryUtils';\r\nimport storageUtils from '../src/utils/storageUtils';\r\n\r\n// Read the user saved in local and save it to memory\r\nconst user = storageUtils.getUser();\r\nmemoryUtils.user = user;\r\n\r\n// Render the component tag to the div on the index page\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}